// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Global
#include <Global.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_IFlxBasic
#include <flixel/IFlxBasic.h>
#endif
#ifndef INCLUDED_flixel_IFlxSprite
#include <flixel/IFlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_display_FlxNestedSprite
#include <flixel/addons/display/FlxNestedSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_weapon_FlxBullet
#include <flixel/addons/weapon/FlxBullet.h>
#endif
#ifndef INCLUDED_flixel_system_debug_log_LogStyle
#include <flixel/system/debug/log/LogStyle.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_LogFrontEnd
#include <flixel/system/frontEnds/LogFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_util_interfaces_ICollider
#include <util/interfaces/ICollider.h>
#endif
#ifndef INCLUDED_util_mechanica_MechBullet
#include <util/mechanica/MechBullet.h>
#endif
#ifndef INCLUDED_util_mechanica_Mechanica
#include <util/mechanica/Mechanica.h>
#endif
#ifndef INCLUDED_util_mechanica_ShellBullet
#include <util/mechanica/ShellBullet.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c3415798b4c28aac_63_new,"util.mechanica.ShellBullet","new",0x5e7fea67,"util.mechanica.ShellBullet.new","util/mechanica/MechBullet.hx",63,0x3f6d8c20)
namespace util{
namespace mechanica{

void ShellBullet_obj::__construct(Float lifespan, ::util::mechanica::Mechanica parent){
            	HX_STACKFRAME(&_hx_pos_c3415798b4c28aac_63_new)
HXLINE(  64)		super::__construct(lifespan,parent);
HXLINE(  65)		::flixel::FlxG_obj::log->advanced(HX_("Create a new bullet",e5,6a,1a,2b),::Global_obj::logStyle,null());
HXLINE(  66)		this->loadGraphic(HX_("assets/images/bullets/shell.png",02,b7,31,76),false,(int)4,(int)4,null(),null());
            	}

Dynamic ShellBullet_obj::__CreateEmpty() { return new ShellBullet_obj; }

void *ShellBullet_obj::_hx_vtable = 0;

Dynamic ShellBullet_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ShellBullet_obj > _hx_result = new ShellBullet_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ShellBullet_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x15e89376) {
		if (inClassId<=(int)0x0b6ffd77) {
			if (inClassId<=(int)0x051614e1) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x051614e1;
			} else {
				return inClassId==(int)0x0b6ffd77;
			}
		} else {
			return inClassId==(int)0x15e89376;
		}
	} else {
		if (inClassId<=(int)0x2e105115) {
			return inClassId==(int)0x25a685e0 || inClassId==(int)0x2e105115;
		} else {
			return inClassId==(int)0x33f27b77;
		}
	}
}


hx::ObjectPtr< ShellBullet_obj > ShellBullet_obj::__new(Float lifespan, ::util::mechanica::Mechanica parent) {
	hx::ObjectPtr< ShellBullet_obj > __this = new ShellBullet_obj();
	__this->__construct(lifespan,parent);
	return __this;
}

hx::ObjectPtr< ShellBullet_obj > ShellBullet_obj::__alloc(hx::Ctx *_hx_ctx,Float lifespan, ::util::mechanica::Mechanica parent) {
	ShellBullet_obj *__this = (ShellBullet_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ShellBullet_obj), true, "util.mechanica.ShellBullet"));
	*(void **)__this = ShellBullet_obj::_hx_vtable;
	__this->__construct(lifespan,parent);
	return __this;
}

ShellBullet_obj::ShellBullet_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ShellBullet_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ShellBullet_obj_sStaticStorageInfo = 0;
#endif

static void ShellBullet_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ShellBullet_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ShellBullet_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ShellBullet_obj::__mClass,"__mClass");
};

#endif

hx::Class ShellBullet_obj::__mClass;

void ShellBullet_obj::__register()
{
	hx::Object *dummy = new ShellBullet_obj;
	ShellBullet_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("util.mechanica.ShellBullet","\xf5","\x2a","\xbb","\xe0");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ShellBullet_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ShellBullet_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ShellBullet_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ShellBullet_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ShellBullet_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace util
} // end namespace mechanica
