// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_util_mechanica_LocomotionStatus
#include <util/mechanica/LocomotionStatus.h>
#endif
namespace util{
namespace mechanica{

::util::mechanica::LocomotionStatus LocomotionStatus_obj::Accelerating;

::util::mechanica::LocomotionStatus LocomotionStatus_obj::Braking;

::util::mechanica::LocomotionStatus LocomotionStatus_obj::Standing;

::util::mechanica::LocomotionStatus LocomotionStatus_obj::ThrusterEngaged;

::util::mechanica::LocomotionStatus LocomotionStatus_obj::Walking;

bool LocomotionStatus_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Accelerating",7a,4b,73,62)) { outValue = LocomotionStatus_obj::Accelerating; return true; }
	if (inName==HX_("Braking",48,e6,1f,6e)) { outValue = LocomotionStatus_obj::Braking; return true; }
	if (inName==HX_("Standing",ec,01,30,c4)) { outValue = LocomotionStatus_obj::Standing; return true; }
	if (inName==HX_("ThrusterEngaged",fe,aa,c9,8b)) { outValue = LocomotionStatus_obj::ThrusterEngaged; return true; }
	if (inName==HX_("Walking",59,e3,b9,60)) { outValue = LocomotionStatus_obj::Walking; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(LocomotionStatus_obj)

int LocomotionStatus_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Accelerating",7a,4b,73,62)) return 3;
	if (inName==HX_("Braking",48,e6,1f,6e)) return 1;
	if (inName==HX_("Standing",ec,01,30,c4)) return 0;
	if (inName==HX_("ThrusterEngaged",fe,aa,c9,8b)) return 4;
	if (inName==HX_("Walking",59,e3,b9,60)) return 2;
	return super::__FindIndex(inName);
}

int LocomotionStatus_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Accelerating",7a,4b,73,62)) return 0;
	if (inName==HX_("Braking",48,e6,1f,6e)) return 0;
	if (inName==HX_("Standing",ec,01,30,c4)) return 0;
	if (inName==HX_("ThrusterEngaged",fe,aa,c9,8b)) return 0;
	if (inName==HX_("Walking",59,e3,b9,60)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val LocomotionStatus_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Accelerating",7a,4b,73,62)) return Accelerating;
	if (inName==HX_("Braking",48,e6,1f,6e)) return Braking;
	if (inName==HX_("Standing",ec,01,30,c4)) return Standing;
	if (inName==HX_("ThrusterEngaged",fe,aa,c9,8b)) return ThrusterEngaged;
	if (inName==HX_("Walking",59,e3,b9,60)) return Walking;
	return super::__Field(inName,inCallProp);
}

static ::String LocomotionStatus_obj_sStaticFields[] = {
	HX_("Standing",ec,01,30,c4),
	HX_("Braking",48,e6,1f,6e),
	HX_("Walking",59,e3,b9,60),
	HX_("Accelerating",7a,4b,73,62),
	HX_("ThrusterEngaged",fe,aa,c9,8b),
	::String(null())
};

static void LocomotionStatus_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(LocomotionStatus_obj::Accelerating,"Accelerating");
	HX_MARK_MEMBER_NAME(LocomotionStatus_obj::Braking,"Braking");
	HX_MARK_MEMBER_NAME(LocomotionStatus_obj::Standing,"Standing");
	HX_MARK_MEMBER_NAME(LocomotionStatus_obj::ThrusterEngaged,"ThrusterEngaged");
	HX_MARK_MEMBER_NAME(LocomotionStatus_obj::Walking,"Walking");
};

#ifdef HXCPP_VISIT_ALLOCS
static void LocomotionStatus_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(LocomotionStatus_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(LocomotionStatus_obj::Accelerating,"Accelerating");
	HX_VISIT_MEMBER_NAME(LocomotionStatus_obj::Braking,"Braking");
	HX_VISIT_MEMBER_NAME(LocomotionStatus_obj::Standing,"Standing");
	HX_VISIT_MEMBER_NAME(LocomotionStatus_obj::ThrusterEngaged,"ThrusterEngaged");
	HX_VISIT_MEMBER_NAME(LocomotionStatus_obj::Walking,"Walking");
};
#endif

hx::Class LocomotionStatus_obj::__mClass;

Dynamic __Create_LocomotionStatus_obj() { return new LocomotionStatus_obj; }

void LocomotionStatus_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("util.mechanica.LocomotionStatus","\xb4","\xa5","\x2f","\x23"), hx::TCanCast< LocomotionStatus_obj >,LocomotionStatus_obj_sStaticFields,0,
	&__Create_LocomotionStatus_obj, &__Create,
	&super::__SGetClass(), &CreateLocomotionStatus_obj, LocomotionStatus_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , LocomotionStatus_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &LocomotionStatus_obj::__GetStatic;
}

void LocomotionStatus_obj::__boot()
{
Accelerating = hx::CreateEnum< LocomotionStatus_obj >(HX_HCSTRING("Accelerating","\x7a","\x4b","\x73","\x62"),3,0);
Braking = hx::CreateEnum< LocomotionStatus_obj >(HX_HCSTRING("Braking","\x48","\xe6","\x1f","\x6e"),1,0);
Standing = hx::CreateEnum< LocomotionStatus_obj >(HX_HCSTRING("Standing","\xec","\x01","\x30","\xc4"),0,0);
ThrusterEngaged = hx::CreateEnum< LocomotionStatus_obj >(HX_HCSTRING("ThrusterEngaged","\xfe","\xaa","\xc9","\x8b"),4,0);
Walking = hx::CreateEnum< LocomotionStatus_obj >(HX_HCSTRING("Walking","\x59","\xe3","\xb9","\x60"),2,0);
}


} // end namespace util
} // end namespace mechanica
