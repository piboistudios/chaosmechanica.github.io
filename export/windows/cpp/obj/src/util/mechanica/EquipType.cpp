// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_util_mechanica_EquipType
#include <util/mechanica/EquipType.h>
#endif
namespace util{
namespace mechanica{

::util::mechanica::EquipType EquipType_obj::Arms;

::util::mechanica::EquipType EquipType_obj::Core;

::util::mechanica::EquipType EquipType_obj::Equipment1;

::util::mechanica::EquipType EquipType_obj::Equipment2;

::util::mechanica::EquipType EquipType_obj::Head;

::util::mechanica::EquipType EquipType_obj::Legs;

::util::mechanica::EquipType EquipType_obj::Thruster;

bool EquipType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Arms",b7,be,4d,2b)) { outValue = EquipType_obj::Arms; return true; }
	if (inName==HX_("Core",7f,e9,9d,2c)) { outValue = EquipType_obj::Core; return true; }
	if (inName==HX_("Equipment1",43,94,b9,f0)) { outValue = EquipType_obj::Equipment1; return true; }
	if (inName==HX_("Equipment2",44,94,b9,f0)) { outValue = EquipType_obj::Equipment2; return true; }
	if (inName==HX_("Head",40,55,e4,2f)) { outValue = EquipType_obj::Head; return true; }
	if (inName==HX_("Legs",05,35,89,32)) { outValue = EquipType_obj::Legs; return true; }
	if (inName==HX_("Thruster",25,99,32,e8)) { outValue = EquipType_obj::Thruster; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(EquipType_obj)

int EquipType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Arms",b7,be,4d,2b)) return 2;
	if (inName==HX_("Core",7f,e9,9d,2c)) return 1;
	if (inName==HX_("Equipment1",43,94,b9,f0)) return 5;
	if (inName==HX_("Equipment2",44,94,b9,f0)) return 6;
	if (inName==HX_("Head",40,55,e4,2f)) return 0;
	if (inName==HX_("Legs",05,35,89,32)) return 3;
	if (inName==HX_("Thruster",25,99,32,e8)) return 4;
	return super::__FindIndex(inName);
}

int EquipType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Arms",b7,be,4d,2b)) return 0;
	if (inName==HX_("Core",7f,e9,9d,2c)) return 0;
	if (inName==HX_("Equipment1",43,94,b9,f0)) return 0;
	if (inName==HX_("Equipment2",44,94,b9,f0)) return 0;
	if (inName==HX_("Head",40,55,e4,2f)) return 0;
	if (inName==HX_("Legs",05,35,89,32)) return 0;
	if (inName==HX_("Thruster",25,99,32,e8)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val EquipType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Arms",b7,be,4d,2b)) return Arms;
	if (inName==HX_("Core",7f,e9,9d,2c)) return Core;
	if (inName==HX_("Equipment1",43,94,b9,f0)) return Equipment1;
	if (inName==HX_("Equipment2",44,94,b9,f0)) return Equipment2;
	if (inName==HX_("Head",40,55,e4,2f)) return Head;
	if (inName==HX_("Legs",05,35,89,32)) return Legs;
	if (inName==HX_("Thruster",25,99,32,e8)) return Thruster;
	return super::__Field(inName,inCallProp);
}

static ::String EquipType_obj_sStaticFields[] = {
	HX_("Head",40,55,e4,2f),
	HX_("Core",7f,e9,9d,2c),
	HX_("Arms",b7,be,4d,2b),
	HX_("Legs",05,35,89,32),
	HX_("Thruster",25,99,32,e8),
	HX_("Equipment1",43,94,b9,f0),
	HX_("Equipment2",44,94,b9,f0),
	::String(null())
};

static void EquipType_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(EquipType_obj::Arms,"Arms");
	HX_MARK_MEMBER_NAME(EquipType_obj::Core,"Core");
	HX_MARK_MEMBER_NAME(EquipType_obj::Equipment1,"Equipment1");
	HX_MARK_MEMBER_NAME(EquipType_obj::Equipment2,"Equipment2");
	HX_MARK_MEMBER_NAME(EquipType_obj::Head,"Head");
	HX_MARK_MEMBER_NAME(EquipType_obj::Legs,"Legs");
	HX_MARK_MEMBER_NAME(EquipType_obj::Thruster,"Thruster");
};

#ifdef HXCPP_VISIT_ALLOCS
static void EquipType_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(EquipType_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(EquipType_obj::Arms,"Arms");
	HX_VISIT_MEMBER_NAME(EquipType_obj::Core,"Core");
	HX_VISIT_MEMBER_NAME(EquipType_obj::Equipment1,"Equipment1");
	HX_VISIT_MEMBER_NAME(EquipType_obj::Equipment2,"Equipment2");
	HX_VISIT_MEMBER_NAME(EquipType_obj::Head,"Head");
	HX_VISIT_MEMBER_NAME(EquipType_obj::Legs,"Legs");
	HX_VISIT_MEMBER_NAME(EquipType_obj::Thruster,"Thruster");
};
#endif

hx::Class EquipType_obj::__mClass;

Dynamic __Create_EquipType_obj() { return new EquipType_obj; }

void EquipType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("util.mechanica.EquipType","\xad","\xd6","\x85","\x75"), hx::TCanCast< EquipType_obj >,EquipType_obj_sStaticFields,0,
	&__Create_EquipType_obj, &__Create,
	&super::__SGetClass(), &CreateEquipType_obj, EquipType_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , EquipType_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &EquipType_obj::__GetStatic;
}

void EquipType_obj::__boot()
{
Arms = hx::CreateEnum< EquipType_obj >(HX_HCSTRING("Arms","\xb7","\xbe","\x4d","\x2b"),2,0);
Core = hx::CreateEnum< EquipType_obj >(HX_HCSTRING("Core","\x7f","\xe9","\x9d","\x2c"),1,0);
Equipment1 = hx::CreateEnum< EquipType_obj >(HX_HCSTRING("Equipment1","\x43","\x94","\xb9","\xf0"),5,0);
Equipment2 = hx::CreateEnum< EquipType_obj >(HX_HCSTRING("Equipment2","\x44","\x94","\xb9","\xf0"),6,0);
Head = hx::CreateEnum< EquipType_obj >(HX_HCSTRING("Head","\x40","\x55","\xe4","\x2f"),0,0);
Legs = hx::CreateEnum< EquipType_obj >(HX_HCSTRING("Legs","\x05","\x35","\x89","\x32"),3,0);
Thruster = hx::CreateEnum< EquipType_obj >(HX_HCSTRING("Thruster","\x25","\x99","\x32","\xe8"),4,0);
}


} // end namespace util
} // end namespace mechanica
