// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_weapon_FlxWeaponFireFrom
#include <flixel/addons/weapon/FlxWeaponFireFrom.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_helpers_FlxBounds
#include <flixel/util/helpers/FlxBounds.h>
#endif
namespace flixel{
namespace addons{
namespace weapon{

::flixel::addons::weapon::FlxWeaponFireFrom FlxWeaponFireFrom_obj::PARENT( ::flixel::FlxSprite parent, ::flixel::util::helpers::FlxBounds offset, ::Dynamic useParentAngle, ::Dynamic angleOffset)
{
	return hx::CreateEnum< FlxWeaponFireFrom_obj >(HX_("PARENT",2a,b1,00,a0),0,4)->_hx_init(0,parent)->_hx_init(1,offset)->_hx_init(2,useParentAngle)->_hx_init(3,angleOffset);
}

::flixel::addons::weapon::FlxWeaponFireFrom FlxWeaponFireFrom_obj::POSITION( ::flixel::util::helpers::FlxBounds position)
{
	return hx::CreateEnum< FlxWeaponFireFrom_obj >(HX_("POSITION",a9,30,80,24),1,1)->_hx_init(0,position);
}

bool FlxWeaponFireFrom_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("PARENT",2a,b1,00,a0)) { outValue = FlxWeaponFireFrom_obj::PARENT_dyn(); return true; }
	if (inName==HX_("POSITION",a9,30,80,24)) { outValue = FlxWeaponFireFrom_obj::POSITION_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(FlxWeaponFireFrom_obj)

int FlxWeaponFireFrom_obj::__FindIndex(::String inName)
{
	if (inName==HX_("PARENT",2a,b1,00,a0)) return 0;
	if (inName==HX_("POSITION",a9,30,80,24)) return 1;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC4(FlxWeaponFireFrom_obj,PARENT,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxWeaponFireFrom_obj,POSITION,return)

int FlxWeaponFireFrom_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("PARENT",2a,b1,00,a0)) return 4;
	if (inName==HX_("POSITION",a9,30,80,24)) return 1;
	return super::__FindArgCount(inName);
}

hx::Val FlxWeaponFireFrom_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("PARENT",2a,b1,00,a0)) return PARENT_dyn();
	if (inName==HX_("POSITION",a9,30,80,24)) return POSITION_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String FlxWeaponFireFrom_obj_sStaticFields[] = {
	HX_("PARENT",2a,b1,00,a0),
	HX_("POSITION",a9,30,80,24),
	::String(null())
};

static void FlxWeaponFireFrom_obj_sMarkStatics(HX_MARK_PARAMS) {
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxWeaponFireFrom_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxWeaponFireFrom_obj::__mClass,"__mClass");
};
#endif

hx::Class FlxWeaponFireFrom_obj::__mClass;

Dynamic __Create_FlxWeaponFireFrom_obj() { return new FlxWeaponFireFrom_obj; }

void FlxWeaponFireFrom_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("flixel.addons.weapon.FlxWeaponFireFrom","\xe5","\x61","\x68","\x30"), hx::TCanCast< FlxWeaponFireFrom_obj >,FlxWeaponFireFrom_obj_sStaticFields,0,
	&__Create_FlxWeaponFireFrom_obj, &__Create,
	&super::__SGetClass(), &CreateFlxWeaponFireFrom_obj, FlxWeaponFireFrom_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , FlxWeaponFireFrom_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &FlxWeaponFireFrom_obj::__GetStatic;
}

void FlxWeaponFireFrom_obj::__boot()
{
}


} // end namespace flixel
} // end namespace addons
} // end namespace weapon
