// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_dat__Data_Core_Impl_
#include <dat/_Data/Core_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_7e6f6205935b6124_216_get_id,"dat._Data.Core_Impl_","get_id",0xf54785b7,"dat._Data.Core_Impl_.get_id","cdb/Module.hx",216,0x02d48d44)
HX_LOCAL_STACK_FRAME(_hx_pos_7e6f6205935b6124_192_get_coolingRate,"dat._Data.Core_Impl_","get_coolingRate",0x339f7fdd,"dat._Data.Core_Impl_.get_coolingRate","cdb/Module.hx",192,0x02d48d44)
HX_LOCAL_STACK_FRAME(_hx_pos_7e6f6205935b6124_192_get_regenRate,"dat._Data.Core_Impl_","get_regenRate",0xb76159e1,"dat._Data.Core_Impl_.get_regenRate","cdb/Module.hx",192,0x02d48d44)
namespace dat{
namespace _Data{

void Core_Impl__obj::__construct() { }

Dynamic Core_Impl__obj::__CreateEmpty() { return new Core_Impl__obj; }

void *Core_Impl__obj::_hx_vtable = 0;

Dynamic Core_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Core_Impl__obj > _hx_result = new Core_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Core_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0564b1d9;
}

::String Core_Impl__obj::get_id( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_7e6f6205935b6124_216_get_id)
HXDLIN( 216)		return ( (::String)(this1->__Field(HX_("id",db,5b,00,00),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Core_Impl__obj,get_id,return )

Float Core_Impl__obj::get_coolingRate( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_7e6f6205935b6124_192_get_coolingRate)
HXDLIN( 192)		return ( (Float)(this1->__Field(HX_("coolingRate",39,c5,94,5c),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Core_Impl__obj,get_coolingRate,return )

Float Core_Impl__obj::get_regenRate( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_7e6f6205935b6124_192_get_regenRate)
HXDLIN( 192)		return ( (Float)(this1->__Field(HX_("regenRate",3d,50,27,2a),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Core_Impl__obj,get_regenRate,return )


Core_Impl__obj::Core_Impl__obj()
{
}

bool Core_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"get_id") ) { outValue = get_id_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_regenRate") ) { outValue = get_regenRate_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_coolingRate") ) { outValue = get_coolingRate_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Core_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Core_Impl__obj_sStaticStorageInfo = 0;
#endif

static void Core_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Core_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Core_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Core_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class Core_Impl__obj::__mClass;

static ::String Core_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("get_id","\x24","\xf3","\x2f","\xa3"),
	HX_HCSTRING("get_coolingRate","\xd0","\x7c","\x76","\x1d"),
	HX_HCSTRING("get_regenRate","\x14","\x24","\x8b","\xeb"),
	::String(null())
};

void Core_Impl__obj::__register()
{
	hx::Object *dummy = new Core_Impl__obj;
	Core_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("dat._Data.Core_Impl_","\x7b","\xb9","\x99","\xab");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Core_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Core_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Core_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Core_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Core_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Core_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Core_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace dat
} // end namespace _Data
