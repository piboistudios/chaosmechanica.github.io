// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_dat__Data_Thruster_Impl_
#include <dat/_Data/Thruster_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_bff467c59338baf6_216_get_id,"dat._Data.Thruster_Impl_","get_id",0xfb640851,"dat._Data.Thruster_Impl_.get_id","cdb/Module.hx",216,0x02d48d44)
HX_LOCAL_STACK_FRAME(_hx_pos_bff467c59338baf6_192_get_topSpeed,"dat._Data.Thruster_Impl_","get_topSpeed",0x8d8b0da8,"dat._Data.Thruster_Impl_.get_topSpeed","cdb/Module.hx",192,0x02d48d44)
HX_LOCAL_STACK_FRAME(_hx_pos_bff467c59338baf6_192_get_acceleration,"dat._Data.Thruster_Impl_","get_acceleration",0xa6191c36,"dat._Data.Thruster_Impl_.get_acceleration","cdb/Module.hx",192,0x02d48d44)
HX_LOCAL_STACK_FRAME(_hx_pos_bff467c59338baf6_192_get_driveEnUsage,"dat._Data.Thruster_Impl_","get_driveEnUsage",0x362ac804,"dat._Data.Thruster_Impl_.get_driveEnUsage","cdb/Module.hx",192,0x02d48d44)
HX_LOCAL_STACK_FRAME(_hx_pos_bff467c59338baf6_192_get_ignitionEnUsage,"dat._Data.Thruster_Impl_","get_ignitionEnUsage",0xad650b55,"dat._Data.Thruster_Impl_.get_ignitionEnUsage","cdb/Module.hx",192,0x02d48d44)
HX_LOCAL_STACK_FRAME(_hx_pos_bff467c59338baf6_192_get_flareImageFile,"dat._Data.Thruster_Impl_","get_flareImageFile",0x6eec8a3f,"dat._Data.Thruster_Impl_.get_flareImageFile","cdb/Module.hx",192,0x02d48d44)
HX_LOCAL_STACK_FRAME(_hx_pos_bff467c59338baf6_192_get_flareSize,"dat._Data.Thruster_Impl_","get_flareSize",0xab58eef9,"dat._Data.Thruster_Impl_.get_flareSize","cdb/Module.hx",192,0x02d48d44)
namespace dat{
namespace _Data{

void Thruster_Impl__obj::__construct() { }

Dynamic Thruster_Impl__obj::__CreateEmpty() { return new Thruster_Impl__obj; }

void *Thruster_Impl__obj::_hx_vtable = 0;

Dynamic Thruster_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Thruster_Impl__obj > _hx_result = new Thruster_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Thruster_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0d075463;
}

::String Thruster_Impl__obj::get_id( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_bff467c59338baf6_216_get_id)
HXDLIN( 216)		return ( (::String)(this1->__Field(HX_("id",db,5b,00,00),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Thruster_Impl__obj,get_id,return )

Float Thruster_Impl__obj::get_topSpeed( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_bff467c59338baf6_192_get_topSpeed)
HXDLIN( 192)		return ( (Float)(this1->__Field(HX_("topSpeed",b2,a4,39,cf),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Thruster_Impl__obj,get_topSpeed,return )

Float Thruster_Impl__obj::get_acceleration( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_bff467c59338baf6_192_get_acceleration)
HXDLIN( 192)		return ( (Float)(this1->__Field(HX_("acceleration",40,00,61,9a),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Thruster_Impl__obj,get_acceleration,return )

Float Thruster_Impl__obj::get_driveEnUsage( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_bff467c59338baf6_192_get_driveEnUsage)
HXDLIN( 192)		return ( (Float)(this1->__Field(HX_("driveEnUsage",0e,ac,72,2a),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Thruster_Impl__obj,get_driveEnUsage,return )

Float Thruster_Impl__obj::get_ignitionEnUsage( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_bff467c59338baf6_192_get_ignitionEnUsage)
HXDLIN( 192)		return ( (Float)(this1->__Field(HX_("ignitionEnUsage",8b,c9,bf,1a),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Thruster_Impl__obj,get_ignitionEnUsage,return )

::String Thruster_Impl__obj::get_flareImageFile( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_bff467c59338baf6_192_get_flareImageFile)
HXDLIN( 192)		return ( (::String)(this1->__Field(HX_("flareImageFile",c9,04,fd,ef),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Thruster_Impl__obj,get_flareImageFile,return )

int Thruster_Impl__obj::get_flareSize( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_bff467c59338baf6_192_get_flareSize)
HXDLIN( 192)		return ( (int)(this1->__Field(HX_("flareSize",af,80,6e,e2),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Thruster_Impl__obj,get_flareSize,return )


Thruster_Impl__obj::Thruster_Impl__obj()
{
}

bool Thruster_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"get_id") ) { outValue = get_id_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_topSpeed") ) { outValue = get_topSpeed_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_flareSize") ) { outValue = get_flareSize_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_acceleration") ) { outValue = get_acceleration_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_driveEnUsage") ) { outValue = get_driveEnUsage_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"get_flareImageFile") ) { outValue = get_flareImageFile_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"get_ignitionEnUsage") ) { outValue = get_ignitionEnUsage_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Thruster_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Thruster_Impl__obj_sStaticStorageInfo = 0;
#endif

static void Thruster_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Thruster_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Thruster_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Thruster_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class Thruster_Impl__obj::__mClass;

static ::String Thruster_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("get_id","\x24","\xf3","\x2f","\xa3"),
	HX_HCSTRING("get_topSpeed","\xbb","\x58","\x53","\x84"),
	HX_HCSTRING("get_acceleration","\xc9","\xec","\xff","\x9e"),
	HX_HCSTRING("get_driveEnUsage","\x97","\x98","\x11","\x2f"),
	HX_HCSTRING("get_ignitionEnUsage","\xa2","\x98","\xca","\xa5"),
	HX_HCSTRING("get_flareImageFile","\x92","\xe5","\x96","\x8b"),
	HX_HCSTRING("get_flareSize","\x86","\x54","\xd2","\xa3"),
	::String(null())
};

void Thruster_Impl__obj::__register()
{
	hx::Object *dummy = new Thruster_Impl__obj;
	Thruster_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("dat._Data.Thruster_Impl_","\xa1","\xe7","\xbb","\x5b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Thruster_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Thruster_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Thruster_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Thruster_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Thruster_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Thruster_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Thruster_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace dat
} // end namespace _Data
