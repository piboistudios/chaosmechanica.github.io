// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_cpp_Lib
#include <cpp/Lib.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lib_hxudp_UdpSocket
#include <lib/hxudp/UdpSocket.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_60_new,"lib.hxudp.UdpSocket","new",0xd3ec1200,"lib.hxudp.UdpSocket.new","lib/hxudp/UdpSocket.hx",60,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_66_close,"lib.hxudp.UdpSocket","close",0x63c70158,"lib.hxudp.UdpSocket.close","lib/hxudp/UdpSocket.hx",66,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_72_create,"lib.hxudp.UdpSocket","create",0x5817e95c,"lib.hxudp.UdpSocket.create","lib/hxudp/UdpSocket.hx",72,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_78_connect,"lib.hxudp.UdpSocket","connect",0xc0e9cd8a,"lib.hxudp.UdpSocket.connect","lib/hxudp/UdpSocket.hx",78,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_84_connectMcast,"lib.hxudp.UdpSocket","connectMcast",0x4043a7c2,"lib.hxudp.UdpSocket.connectMcast","lib/hxudp/UdpSocket.hx",84,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_90_bind,"lib.hxudp.UdpSocket","bind",0x92b8201d,"lib.hxudp.UdpSocket.bind","lib/hxudp/UdpSocket.hx",90,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_98_bindMcast,"lib.hxudp.UdpSocket","bindMcast",0x2dc2204f,"lib.hxudp.UdpSocket.bindMcast","lib/hxudp/UdpSocket.hx",98,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_106_send,"lib.hxudp.UdpSocket","send",0x9df1b7a8,"lib.hxudp.UdpSocket.send","lib/hxudp/UdpSocket.hx",106,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_114_sendAll,"lib.hxudp.UdpSocket","sendAll",0x53f83259,"lib.hxudp.UdpSocket.sendAll","lib/hxudp/UdpSocket.hx",114,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_120_receive,"lib.hxudp.UdpSocket","receive",0xd5c1f383,"lib.hxudp.UdpSocket.receive","lib/hxudp/UdpSocket.hx",120,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_126_setTimeoutSend,"lib.hxudp.UdpSocket","setTimeoutSend",0xf3d95667,"lib.hxudp.UdpSocket.setTimeoutSend","lib/hxudp/UdpSocket.hx",126,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_132_setTimeoutReceive,"lib.hxudp.UdpSocket","setTimeoutReceive",0xd830d624,"lib.hxudp.UdpSocket.setTimeoutReceive","lib/hxudp/UdpSocket.hx",132,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_138_getTimeoutSend,"lib.hxudp.UdpSocket","getTimeoutSend",0xd3b96df3,"lib.hxudp.UdpSocket.getTimeoutSend","lib/hxudp/UdpSocket.hx",138,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_144_getTimeoutReceive,"lib.hxudp.UdpSocket","getTimeoutReceive",0xb4c2fe18,"lib.hxudp.UdpSocket.getTimeoutReceive","lib/hxudp/UdpSocket.hx",144,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_149_getInetAddr,"lib.hxudp.UdpSocket","getInetAddr",0x1fca4d3b,"lib.hxudp.UdpSocket.getInetAddr","lib/hxudp/UdpSocket.hx",149,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_153_getRemoteAddr,"lib.hxudp.UdpSocket","getRemoteAddr",0x931b52ad,"lib.hxudp.UdpSocket.getRemoteAddr","lib/hxudp/UdpSocket.hx",153,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_159_setReceiveBufferSize,"lib.hxudp.UdpSocket","setReceiveBufferSize",0x1bfaa202,"lib.hxudp.UdpSocket.setReceiveBufferSize","lib/hxudp/UdpSocket.hx",159,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_165_setSendBufferSize,"lib.hxudp.UdpSocket","setSendBufferSize",0xa853662b,"lib.hxudp.UdpSocket.setSendBufferSize","lib/hxudp/UdpSocket.hx",165,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_171_getReceiveBufferSize,"lib.hxudp.UdpSocket","getReceiveBufferSize",0x4f42ea8e,"lib.hxudp.UdpSocket.getReceiveBufferSize","lib/hxudp/UdpSocket.hx",171,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_177_getSendBufferSize,"lib.hxudp.UdpSocket","getSendBufferSize",0x84e58e1f,"lib.hxudp.UdpSocket.getSendBufferSize","lib/hxudp/UdpSocket.hx",177,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_183_setReuseAddress,"lib.hxudp.UdpSocket","setReuseAddress",0x2d37ba02,"lib.hxudp.UdpSocket.setReuseAddress","lib/hxudp/UdpSocket.hx",183,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_189_setEnableBroadcast,"lib.hxudp.UdpSocket","setEnableBroadcast",0x0281d0dc,"lib.hxudp.UdpSocket.setEnableBroadcast","lib/hxudp/UdpSocket.hx",189,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_195_setNonBlocking,"lib.hxudp.UdpSocket","setNonBlocking",0xd4992dc0,"lib.hxudp.UdpSocket.setNonBlocking","lib/hxudp/UdpSocket.hx",195,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_201_getMaxMsgSize,"lib.hxudp.UdpSocket","getMaxMsgSize",0x418dfb34,"lib.hxudp.UdpSocket.getMaxMsgSize","lib/hxudp/UdpSocket.hx",201,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_207_getTTL,"lib.hxudp.UdpSocket","getTTL",0x7f300a56,"lib.hxudp.UdpSocket.getTTL","lib/hxudp/UdpSocket.hx",207,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_213_setTTL,"lib.hxudp.UdpSocket","setTTL",0x4b785eca,"lib.hxudp.UdpSocket.setTTL","lib/hxudp/UdpSocket.hx",213,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_62_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",62,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_68_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",68,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_74_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",74,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_80_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",80,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_86_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",86,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_92_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",92,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_100_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",100,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_108_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",108,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_116_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",116,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_122_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",122,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_128_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",128,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_134_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",134,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_140_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",140,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_146_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",146,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_151_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",151,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_155_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",155,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_161_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",161,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_167_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",167,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_173_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",173,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_179_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",179,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_185_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",185,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_191_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",191,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_197_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",197,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_203_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",203,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_209_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",209,0x2f0dbf32)
HX_LOCAL_STACK_FRAME(_hx_pos_3b55fd67d557d2b7_215_boot,"lib.hxudp.UdpSocket","boot",0x92bcae92,"lib.hxudp.UdpSocket.boot","lib/hxudp/UdpSocket.hx",215,0x2f0dbf32)
namespace lib{
namespace hxudp{

void UdpSocket_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_60_new)
HXDLIN(  60)		this->handle = ::lib::hxudp::UdpSocket_obj::_UdpSocket_new();
            	}

Dynamic UdpSocket_obj::__CreateEmpty() { return new UdpSocket_obj; }

void *UdpSocket_obj::_hx_vtable = 0;

Dynamic UdpSocket_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< UdpSocket_obj > _hx_result = new UdpSocket_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool UdpSocket_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2784bfa8;
}

bool UdpSocket_obj::close(){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_66_close)
HXDLIN(  66)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_Close(this->handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(UdpSocket_obj,close,return )

bool UdpSocket_obj::create(){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_72_create)
HXDLIN(  72)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_Create(this->handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(UdpSocket_obj,create,return )

bool UdpSocket_obj::connect(::String pHost,int usPort){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_78_connect)
HXDLIN(  78)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_Connect(this->handle,pHost,usPort)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(UdpSocket_obj,connect,return )

bool UdpSocket_obj::connectMcast(::String pMcast,int usPort){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_84_connectMcast)
HXDLIN(  84)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_ConnectMcast(this->handle,pMcast,usPort)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(UdpSocket_obj,connectMcast,return )

bool UdpSocket_obj::bind(int usPort){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_90_bind)
HXDLIN(  90)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_Bind(this->handle,usPort)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,bind,return )

bool UdpSocket_obj::bindMcast(::String pMcast,int usPort){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_98_bindMcast)
HXDLIN(  98)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_BindMcast(this->handle,pMcast,usPort)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(UdpSocket_obj,bindMcast,return )

int UdpSocket_obj::send( ::haxe::io::Bytes pBuff){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_106_send)
HXDLIN( 106)		return ( (int)(::lib::hxudp::UdpSocket_obj::_UdpSocket_Send(this->handle,pBuff->b,pBuff->length)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,send,return )

int UdpSocket_obj::sendAll( ::haxe::io::Bytes pBuff){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_114_sendAll)
HXDLIN( 114)		return ( (int)(::lib::hxudp::UdpSocket_obj::_UdpSocket_SendAll(this->handle,pBuff->b,pBuff->length)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,sendAll,return )

int UdpSocket_obj::receive( ::haxe::io::Bytes pBuff){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_120_receive)
HXDLIN( 120)		return ( (int)(::lib::hxudp::UdpSocket_obj::_UdpSocket_Receive(this->handle,pBuff->b,pBuff->length)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,receive,return )

void UdpSocket_obj::setTimeoutSend(int timeoutInSeconds){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_126_setTimeoutSend)
HXDLIN( 126)		::lib::hxudp::UdpSocket_obj::_UdpSocket_SetTimeoutSend(this->handle,timeoutInSeconds);
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,setTimeoutSend,(void))

void UdpSocket_obj::setTimeoutReceive(int timeoutInSeconds){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_132_setTimeoutReceive)
HXDLIN( 132)		::lib::hxudp::UdpSocket_obj::_UdpSocket_SetTimeoutReceive(this->handle,timeoutInSeconds);
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,setTimeoutReceive,(void))

int UdpSocket_obj::getTimeoutSend(){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_138_getTimeoutSend)
HXDLIN( 138)		return ( (int)(::lib::hxudp::UdpSocket_obj::_UdpSocket_GetTimeoutSend(this->handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(UdpSocket_obj,getTimeoutSend,return )

int UdpSocket_obj::getTimeoutReceive(){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_144_getTimeoutReceive)
HXDLIN( 144)		return ( (int)(::lib::hxudp::UdpSocket_obj::_UdpSocket_GetTimeoutReceive(this->handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(UdpSocket_obj,getTimeoutReceive,return )

::String UdpSocket_obj::getInetAddr(){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_149_getInetAddr)
HXDLIN( 149)		return ( (::String)(::lib::hxudp::UdpSocket_obj::_UdpSocket__GetInetAddr(this->handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(UdpSocket_obj,getInetAddr,return )

::String UdpSocket_obj::getRemoteAddr(){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_153_getRemoteAddr)
HXDLIN( 153)		return ( (::String)(::lib::hxudp::UdpSocket_obj::_UdpSocket_GetRemoteAddr(this->handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(UdpSocket_obj,getRemoteAddr,return )

bool UdpSocket_obj::setReceiveBufferSize(int sizeInByte){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_159_setReceiveBufferSize)
HXDLIN( 159)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_SetReceiveBufferSize(this->handle,sizeInByte)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,setReceiveBufferSize,return )

bool UdpSocket_obj::setSendBufferSize(int sizeInByte){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_165_setSendBufferSize)
HXDLIN( 165)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_SetSendBufferSize(this->handle,sizeInByte)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,setSendBufferSize,return )

int UdpSocket_obj::getReceiveBufferSize(){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_171_getReceiveBufferSize)
HXDLIN( 171)		return ( (int)(::lib::hxudp::UdpSocket_obj::_UdpSocket_GetReceiveBufferSize(this->handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(UdpSocket_obj,getReceiveBufferSize,return )

int UdpSocket_obj::getSendBufferSize(){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_177_getSendBufferSize)
HXDLIN( 177)		return ( (int)(::lib::hxudp::UdpSocket_obj::_UdpSocket_GetSendBufferSize(this->handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(UdpSocket_obj,getSendBufferSize,return )

bool UdpSocket_obj::setReuseAddress(bool allowReuse){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_183_setReuseAddress)
HXDLIN( 183)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_SetReuseAddress(this->handle,allowReuse)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,setReuseAddress,return )

bool UdpSocket_obj::setEnableBroadcast(bool enableBroadcast){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_189_setEnableBroadcast)
HXDLIN( 189)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_SetEnableBroadcast(this->handle,enableBroadcast)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,setEnableBroadcast,return )

bool UdpSocket_obj::setNonBlocking(bool useNonBlocking){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_195_setNonBlocking)
HXDLIN( 195)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_SetNonBlocking(this->handle,useNonBlocking)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,setNonBlocking,return )

int UdpSocket_obj::getMaxMsgSize(){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_201_getMaxMsgSize)
HXDLIN( 201)		return ( (int)(::lib::hxudp::UdpSocket_obj::_UdpSocket_GetMaxMsgSize(this->handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(UdpSocket_obj,getMaxMsgSize,return )

int UdpSocket_obj::getTTL(){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_207_getTTL)
HXDLIN( 207)		return ( (int)(::lib::hxudp::UdpSocket_obj::_UdpSocket_GetTTL(this->handle)) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(UdpSocket_obj,getTTL,return )

bool UdpSocket_obj::setTTL(int nTTL){
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_213_setTTL)
HXDLIN( 213)		return ( (bool)(::lib::hxudp::UdpSocket_obj::_UdpSocket_SetTTL(this->handle,nTTL)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(UdpSocket_obj,setTTL,return )

 ::Dynamic UdpSocket_obj::_UdpSocket_new;

 ::Dynamic UdpSocket_obj::_UdpSocket_Close;

 ::Dynamic UdpSocket_obj::_UdpSocket_Create;

 ::Dynamic UdpSocket_obj::_UdpSocket_Connect;

 ::Dynamic UdpSocket_obj::_UdpSocket_ConnectMcast;

 ::Dynamic UdpSocket_obj::_UdpSocket_Bind;

 ::Dynamic UdpSocket_obj::_UdpSocket_BindMcast;

 ::Dynamic UdpSocket_obj::_UdpSocket_Send;

 ::Dynamic UdpSocket_obj::_UdpSocket_SendAll;

 ::Dynamic UdpSocket_obj::_UdpSocket_Receive;

 ::Dynamic UdpSocket_obj::_UdpSocket_SetTimeoutSend;

 ::Dynamic UdpSocket_obj::_UdpSocket_SetTimeoutReceive;

 ::Dynamic UdpSocket_obj::_UdpSocket_GetTimeoutSend;

 ::Dynamic UdpSocket_obj::_UdpSocket_GetTimeoutReceive;

 ::Dynamic UdpSocket_obj::_UdpSocket__GetInetAddr;

 ::Dynamic UdpSocket_obj::_UdpSocket_GetRemoteAddr;

 ::Dynamic UdpSocket_obj::_UdpSocket_SetReceiveBufferSize;

 ::Dynamic UdpSocket_obj::_UdpSocket_SetSendBufferSize;

 ::Dynamic UdpSocket_obj::_UdpSocket_GetReceiveBufferSize;

 ::Dynamic UdpSocket_obj::_UdpSocket_GetSendBufferSize;

 ::Dynamic UdpSocket_obj::_UdpSocket_SetReuseAddress;

 ::Dynamic UdpSocket_obj::_UdpSocket_SetEnableBroadcast;

 ::Dynamic UdpSocket_obj::_UdpSocket_SetNonBlocking;

 ::Dynamic UdpSocket_obj::_UdpSocket_GetMaxMsgSize;

 ::Dynamic UdpSocket_obj::_UdpSocket_GetTTL;

 ::Dynamic UdpSocket_obj::_UdpSocket_SetTTL;


hx::ObjectPtr< UdpSocket_obj > UdpSocket_obj::__new() {
	hx::ObjectPtr< UdpSocket_obj > __this = new UdpSocket_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< UdpSocket_obj > UdpSocket_obj::__alloc(hx::Ctx *_hx_ctx) {
	UdpSocket_obj *__this = (UdpSocket_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(UdpSocket_obj), true, "lib.hxudp.UdpSocket"));
	*(void **)__this = UdpSocket_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

UdpSocket_obj::UdpSocket_obj()
{
}

void UdpSocket_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(UdpSocket);
	HX_MARK_MEMBER_NAME(handle,"handle");
	HX_MARK_END_CLASS();
}

void UdpSocket_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(handle,"handle");
}

hx::Val UdpSocket_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"bind") ) { return hx::Val( bind_dyn() ); }
		if (HX_FIELD_EQ(inName,"send") ) { return hx::Val( send_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"close") ) { return hx::Val( close_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { return hx::Val( handle ); }
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTTL") ) { return hx::Val( getTTL_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTTL") ) { return hx::Val( setTTL_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"connect") ) { return hx::Val( connect_dyn() ); }
		if (HX_FIELD_EQ(inName,"sendAll") ) { return hx::Val( sendAll_dyn() ); }
		if (HX_FIELD_EQ(inName,"receive") ) { return hx::Val( receive_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"bindMcast") ) { return hx::Val( bindMcast_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getInetAddr") ) { return hx::Val( getInetAddr_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"connectMcast") ) { return hx::Val( connectMcast_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getRemoteAddr") ) { return hx::Val( getRemoteAddr_dyn() ); }
		if (HX_FIELD_EQ(inName,"getMaxMsgSize") ) { return hx::Val( getMaxMsgSize_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"setTimeoutSend") ) { return hx::Val( setTimeoutSend_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTimeoutSend") ) { return hx::Val( getTimeoutSend_dyn() ); }
		if (HX_FIELD_EQ(inName,"setNonBlocking") ) { return hx::Val( setNonBlocking_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"setReuseAddress") ) { return hx::Val( setReuseAddress_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"setTimeoutReceive") ) { return hx::Val( setTimeoutReceive_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTimeoutReceive") ) { return hx::Val( getTimeoutReceive_dyn() ); }
		if (HX_FIELD_EQ(inName,"setSendBufferSize") ) { return hx::Val( setSendBufferSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSendBufferSize") ) { return hx::Val( getSendBufferSize_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"setEnableBroadcast") ) { return hx::Val( setEnableBroadcast_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"setReceiveBufferSize") ) { return hx::Val( setReceiveBufferSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"getReceiveBufferSize") ) { return hx::Val( getReceiveBufferSize_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool UdpSocket_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"_UdpSocket_new") ) { outValue = ( _UdpSocket_new ); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"_UdpSocket_Bind") ) { outValue = ( _UdpSocket_Bind ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_Send") ) { outValue = ( _UdpSocket_Send ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"_UdpSocket_Close") ) { outValue = ( _UdpSocket_Close ); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"_UdpSocket_Create") ) { outValue = ( _UdpSocket_Create ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetTTL") ) { outValue = ( _UdpSocket_GetTTL ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetTTL") ) { outValue = ( _UdpSocket_SetTTL ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"_UdpSocket_Connect") ) { outValue = ( _UdpSocket_Connect ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_SendAll") ) { outValue = ( _UdpSocket_SendAll ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_Receive") ) { outValue = ( _UdpSocket_Receive ); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"_UdpSocket_BindMcast") ) { outValue = ( _UdpSocket_BindMcast ); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"_UdpSocket_ConnectMcast") ) { outValue = ( _UdpSocket_ConnectMcast ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket__GetInetAddr") ) { outValue = ( _UdpSocket__GetInetAddr ); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetRemoteAddr") ) { outValue = ( _UdpSocket_GetRemoteAddr ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetMaxMsgSize") ) { outValue = ( _UdpSocket_GetMaxMsgSize ); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetTimeoutSend") ) { outValue = ( _UdpSocket_SetTimeoutSend ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetTimeoutSend") ) { outValue = ( _UdpSocket_GetTimeoutSend ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetNonBlocking") ) { outValue = ( _UdpSocket_SetNonBlocking ); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetReuseAddress") ) { outValue = ( _UdpSocket_SetReuseAddress ); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetTimeoutReceive") ) { outValue = ( _UdpSocket_SetTimeoutReceive ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetTimeoutReceive") ) { outValue = ( _UdpSocket_GetTimeoutReceive ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetSendBufferSize") ) { outValue = ( _UdpSocket_SetSendBufferSize ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetSendBufferSize") ) { outValue = ( _UdpSocket_GetSendBufferSize ); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetEnableBroadcast") ) { outValue = ( _UdpSocket_SetEnableBroadcast ); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetReceiveBufferSize") ) { outValue = ( _UdpSocket_SetReceiveBufferSize ); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetReceiveBufferSize") ) { outValue = ( _UdpSocket_GetReceiveBufferSize ); return true; }
	}
	return false;
}

hx::Val UdpSocket_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { handle=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool UdpSocket_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"_UdpSocket_new") ) { _UdpSocket_new=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"_UdpSocket_Bind") ) { _UdpSocket_Bind=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_Send") ) { _UdpSocket_Send=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"_UdpSocket_Close") ) { _UdpSocket_Close=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"_UdpSocket_Create") ) { _UdpSocket_Create=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetTTL") ) { _UdpSocket_GetTTL=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetTTL") ) { _UdpSocket_SetTTL=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"_UdpSocket_Connect") ) { _UdpSocket_Connect=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_SendAll") ) { _UdpSocket_SendAll=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_Receive") ) { _UdpSocket_Receive=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"_UdpSocket_BindMcast") ) { _UdpSocket_BindMcast=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"_UdpSocket_ConnectMcast") ) { _UdpSocket_ConnectMcast=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket__GetInetAddr") ) { _UdpSocket__GetInetAddr=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetRemoteAddr") ) { _UdpSocket_GetRemoteAddr=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetMaxMsgSize") ) { _UdpSocket_GetMaxMsgSize=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetTimeoutSend") ) { _UdpSocket_SetTimeoutSend=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetTimeoutSend") ) { _UdpSocket_GetTimeoutSend=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetNonBlocking") ) { _UdpSocket_SetNonBlocking=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetReuseAddress") ) { _UdpSocket_SetReuseAddress=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetTimeoutReceive") ) { _UdpSocket_SetTimeoutReceive=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetTimeoutReceive") ) { _UdpSocket_GetTimeoutReceive=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetSendBufferSize") ) { _UdpSocket_SetSendBufferSize=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetSendBufferSize") ) { _UdpSocket_GetSendBufferSize=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetEnableBroadcast") ) { _UdpSocket_SetEnableBroadcast=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"_UdpSocket_SetReceiveBufferSize") ) { _UdpSocket_SetReceiveBufferSize=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"_UdpSocket_GetReceiveBufferSize") ) { _UdpSocket_GetReceiveBufferSize=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

void UdpSocket_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo UdpSocket_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(UdpSocket_obj,handle),HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo UdpSocket_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_new,HX_HCSTRING("_UdpSocket_new","\x56","\x55","\xc3","\x31")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_Close,HX_HCSTRING("_UdpSocket_Close","\x0e","\xb6","\xa3","\xeb")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_Create,HX_HCSTRING("_UdpSocket_Create","\xe6","\x53","\x59","\xb1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_Connect,HX_HCSTRING("_UdpSocket_Connect","\xc0","\x9b","\xe5","\x80")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_ConnectMcast,HX_HCSTRING("_UdpSocket_ConnectMcast","\xcc","\x95","\x02","\xce")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_Bind,HX_HCSTRING("_UdpSocket_Bind","\x27","\xf4","\x14","\x3c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_BindMcast,HX_HCSTRING("_UdpSocket_BindMcast","\x05","\x68","\xf6","\xbe")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_Send,HX_HCSTRING("_UdpSocket_Send","\xb2","\x8b","\x4e","\x47")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_SendAll,HX_HCSTRING("_UdpSocket_SendAll","\x8f","\x00","\xf4","\x13")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_Receive,HX_HCSTRING("_UdpSocket_Receive","\xb9","\xc1","\xbd","\x95")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_SetTimeoutSend,HX_HCSTRING("_UdpSocket_SetTimeoutSend","\xf1","\x5a","\xb7","\xa1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_SetTimeoutReceive,HX_HCSTRING("_UdpSocket_SetTimeoutReceive","\xda","\xc3","\x24","\xa9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_GetTimeoutSend,HX_HCSTRING("_UdpSocket_GetTimeoutSend","\x7d","\x72","\x97","\x81")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_GetTimeoutReceive,HX_HCSTRING("_UdpSocket_GetTimeoutReceive","\xce","\xeb","\xb6","\x85")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket__GetInetAddr,HX_HCSTRING("_UdpSocket__GetInetAddr","\xc6","\xdd","\xf2","\xf1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_GetRemoteAddr,HX_HCSTRING("_UdpSocket_GetRemoteAddr","\x63","\xad","\x6c","\x0c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_SetReceiveBufferSize,HX_HCSTRING("_UdpSocket_SetReceiveBufferSize","\x0c","\xaa","\xc5","\x44")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_SetSendBufferSize,HX_HCSTRING("_UdpSocket_SetSendBufferSize","\xe1","\x53","\x47","\x79")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_GetReceiveBufferSize,HX_HCSTRING("_UdpSocket_GetReceiveBufferSize","\x98","\xf2","\x0d","\x78")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_GetSendBufferSize,HX_HCSTRING("_UdpSocket_GetSendBufferSize","\xd5","\x7b","\xd9","\x55")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_SetReuseAddress,HX_HCSTRING("_UdpSocket_SetReuseAddress","\x38","\xae","\x9d","\xa1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_SetEnableBroadcast,HX_HCSTRING("_UdpSocket_SetEnableBroadcast","\x66","\xe2","\xfd","\x06")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_SetNonBlocking,HX_HCSTRING("_UdpSocket_SetNonBlocking","\x4a","\x32","\x77","\x82")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_GetMaxMsgSize,HX_HCSTRING("_UdpSocket_GetMaxMsgSize","\xea","\x55","\xdf","\xba")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_GetTTL,HX_HCSTRING("_UdpSocket_GetTTL","\xe0","\x74","\x71","\xd8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &UdpSocket_obj::_UdpSocket_SetTTL,HX_HCSTRING("_UdpSocket_SetTTL","\x54","\xc9","\xb9","\xa4")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String UdpSocket_obj_sMemberFields[] = {
	HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"),
	HX_HCSTRING("close","\xb8","\x17","\x63","\x48"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("connect","\xea","\x3b","\x80","\x15"),
	HX_HCSTRING("connectMcast","\x62","\x1d","\xe1","\x2f"),
	HX_HCSTRING("bind","\xbd","\xf5","\x16","\x41"),
	HX_HCSTRING("bindMcast","\xaf","\xe6","\x98","\xa7"),
	HX_HCSTRING("send","\x48","\x8d","\x50","\x4c"),
	HX_HCSTRING("sendAll","\xb9","\xa0","\x8e","\xa8"),
	HX_HCSTRING("receive","\xe3","\x61","\x58","\x2a"),
	HX_HCSTRING("setTimeoutSend","\x07","\x74","\xf7","\x1d"),
	HX_HCSTRING("setTimeoutReceive","\x84","\xfc","\xc4","\xe9"),
	HX_HCSTRING("getTimeoutSend","\x93","\x8b","\xd7","\xfd"),
	HX_HCSTRING("getTimeoutReceive","\x78","\x24","\x57","\xc6"),
	HX_HCSTRING("getInetAddr","\x9b","\x6b","\xa7","\xd1"),
	HX_HCSTRING("getRemoteAddr","\x0d","\xc9","\x44","\x4d"),
	HX_HCSTRING("setReceiveBufferSize","\xa2","\xb7","\x76","\x9c"),
	HX_HCSTRING("setSendBufferSize","\x8b","\x8c","\xe7","\xb9"),
	HX_HCSTRING("getReceiveBufferSize","\x2e","\x00","\xbf","\xcf"),
	HX_HCSTRING("getSendBufferSize","\x7f","\xb4","\x79","\x96"),
	HX_HCSTRING("setReuseAddress","\x62","\x88","\x73","\xdd"),
	HX_HCSTRING("setEnableBroadcast","\x7c","\x3e","\x8f","\x52"),
	HX_HCSTRING("setNonBlocking","\x60","\x4b","\xb7","\xfe"),
	HX_HCSTRING("getMaxMsgSize","\x94","\x71","\xb7","\xfb"),
	HX_HCSTRING("getTTL","\xf6","\x87","\x27","\xa3"),
	HX_HCSTRING("setTTL","\x6a","\xdc","\x6f","\x6f"),
	::String(null()) };

static void UdpSocket_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(UdpSocket_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_new,"_UdpSocket_new");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Close,"_UdpSocket_Close");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Create,"_UdpSocket_Create");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Connect,"_UdpSocket_Connect");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_ConnectMcast,"_UdpSocket_ConnectMcast");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Bind,"_UdpSocket_Bind");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_BindMcast,"_UdpSocket_BindMcast");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Send,"_UdpSocket_Send");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SendAll,"_UdpSocket_SendAll");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Receive,"_UdpSocket_Receive");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetTimeoutSend,"_UdpSocket_SetTimeoutSend");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetTimeoutReceive,"_UdpSocket_SetTimeoutReceive");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetTimeoutSend,"_UdpSocket_GetTimeoutSend");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetTimeoutReceive,"_UdpSocket_GetTimeoutReceive");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket__GetInetAddr,"_UdpSocket__GetInetAddr");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetRemoteAddr,"_UdpSocket_GetRemoteAddr");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetReceiveBufferSize,"_UdpSocket_SetReceiveBufferSize");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetSendBufferSize,"_UdpSocket_SetSendBufferSize");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetReceiveBufferSize,"_UdpSocket_GetReceiveBufferSize");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetSendBufferSize,"_UdpSocket_GetSendBufferSize");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetReuseAddress,"_UdpSocket_SetReuseAddress");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetEnableBroadcast,"_UdpSocket_SetEnableBroadcast");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetNonBlocking,"_UdpSocket_SetNonBlocking");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetMaxMsgSize,"_UdpSocket_GetMaxMsgSize");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetTTL,"_UdpSocket_GetTTL");
	HX_MARK_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetTTL,"_UdpSocket_SetTTL");
};

#ifdef HXCPP_VISIT_ALLOCS
static void UdpSocket_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_new,"_UdpSocket_new");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Close,"_UdpSocket_Close");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Create,"_UdpSocket_Create");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Connect,"_UdpSocket_Connect");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_ConnectMcast,"_UdpSocket_ConnectMcast");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Bind,"_UdpSocket_Bind");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_BindMcast,"_UdpSocket_BindMcast");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Send,"_UdpSocket_Send");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SendAll,"_UdpSocket_SendAll");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_Receive,"_UdpSocket_Receive");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetTimeoutSend,"_UdpSocket_SetTimeoutSend");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetTimeoutReceive,"_UdpSocket_SetTimeoutReceive");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetTimeoutSend,"_UdpSocket_GetTimeoutSend");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetTimeoutReceive,"_UdpSocket_GetTimeoutReceive");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket__GetInetAddr,"_UdpSocket__GetInetAddr");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetRemoteAddr,"_UdpSocket_GetRemoteAddr");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetReceiveBufferSize,"_UdpSocket_SetReceiveBufferSize");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetSendBufferSize,"_UdpSocket_SetSendBufferSize");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetReceiveBufferSize,"_UdpSocket_GetReceiveBufferSize");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetSendBufferSize,"_UdpSocket_GetSendBufferSize");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetReuseAddress,"_UdpSocket_SetReuseAddress");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetEnableBroadcast,"_UdpSocket_SetEnableBroadcast");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetNonBlocking,"_UdpSocket_SetNonBlocking");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetMaxMsgSize,"_UdpSocket_GetMaxMsgSize");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_GetTTL,"_UdpSocket_GetTTL");
	HX_VISIT_MEMBER_NAME(UdpSocket_obj::_UdpSocket_SetTTL,"_UdpSocket_SetTTL");
};

#endif

hx::Class UdpSocket_obj::__mClass;

static ::String UdpSocket_obj_sStaticFields[] = {
	HX_HCSTRING("_UdpSocket_new","\x56","\x55","\xc3","\x31"),
	HX_HCSTRING("_UdpSocket_Close","\x0e","\xb6","\xa3","\xeb"),
	HX_HCSTRING("_UdpSocket_Create","\xe6","\x53","\x59","\xb1"),
	HX_HCSTRING("_UdpSocket_Connect","\xc0","\x9b","\xe5","\x80"),
	HX_HCSTRING("_UdpSocket_ConnectMcast","\xcc","\x95","\x02","\xce"),
	HX_HCSTRING("_UdpSocket_Bind","\x27","\xf4","\x14","\x3c"),
	HX_HCSTRING("_UdpSocket_BindMcast","\x05","\x68","\xf6","\xbe"),
	HX_HCSTRING("_UdpSocket_Send","\xb2","\x8b","\x4e","\x47"),
	HX_HCSTRING("_UdpSocket_SendAll","\x8f","\x00","\xf4","\x13"),
	HX_HCSTRING("_UdpSocket_Receive","\xb9","\xc1","\xbd","\x95"),
	HX_HCSTRING("_UdpSocket_SetTimeoutSend","\xf1","\x5a","\xb7","\xa1"),
	HX_HCSTRING("_UdpSocket_SetTimeoutReceive","\xda","\xc3","\x24","\xa9"),
	HX_HCSTRING("_UdpSocket_GetTimeoutSend","\x7d","\x72","\x97","\x81"),
	HX_HCSTRING("_UdpSocket_GetTimeoutReceive","\xce","\xeb","\xb6","\x85"),
	HX_HCSTRING("_UdpSocket__GetInetAddr","\xc6","\xdd","\xf2","\xf1"),
	HX_HCSTRING("_UdpSocket_GetRemoteAddr","\x63","\xad","\x6c","\x0c"),
	HX_HCSTRING("_UdpSocket_SetReceiveBufferSize","\x0c","\xaa","\xc5","\x44"),
	HX_HCSTRING("_UdpSocket_SetSendBufferSize","\xe1","\x53","\x47","\x79"),
	HX_HCSTRING("_UdpSocket_GetReceiveBufferSize","\x98","\xf2","\x0d","\x78"),
	HX_HCSTRING("_UdpSocket_GetSendBufferSize","\xd5","\x7b","\xd9","\x55"),
	HX_HCSTRING("_UdpSocket_SetReuseAddress","\x38","\xae","\x9d","\xa1"),
	HX_HCSTRING("_UdpSocket_SetEnableBroadcast","\x66","\xe2","\xfd","\x06"),
	HX_HCSTRING("_UdpSocket_SetNonBlocking","\x4a","\x32","\x77","\x82"),
	HX_HCSTRING("_UdpSocket_GetMaxMsgSize","\xea","\x55","\xdf","\xba"),
	HX_HCSTRING("_UdpSocket_GetTTL","\xe0","\x74","\x71","\xd8"),
	HX_HCSTRING("_UdpSocket_SetTTL","\x54","\xc9","\xb9","\xa4"),
	::String(null())
};

void UdpSocket_obj::__register()
{
	hx::Object *dummy = new UdpSocket_obj;
	UdpSocket_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lib.hxudp.UdpSocket","\x0e","\x52","\x83","\xcc");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &UdpSocket_obj::__GetStatic;
	__mClass->mSetStaticField = &UdpSocket_obj::__SetStatic;
	__mClass->mMarkFunc = UdpSocket_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(UdpSocket_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(UdpSocket_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< UdpSocket_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = UdpSocket_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = UdpSocket_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = UdpSocket_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void UdpSocket_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_62_boot)
HXDLIN(  62)		_UdpSocket_new = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_new",56,55,c3,31),(int)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_68_boot)
HXDLIN(  68)		_UdpSocket_Close = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_Close",0e,b6,a3,eb),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_74_boot)
HXDLIN(  74)		_UdpSocket_Create = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_Create",e6,53,59,b1),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_80_boot)
HXDLIN(  80)		_UdpSocket_Connect = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_Connect",c0,9b,e5,80),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_86_boot)
HXDLIN(  86)		_UdpSocket_ConnectMcast = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_ConnectMcast",cc,95,02,ce),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_92_boot)
HXDLIN(  92)		_UdpSocket_Bind = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_Bind",27,f4,14,3c),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_100_boot)
HXDLIN( 100)		_UdpSocket_BindMcast = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_BindMcast",05,68,f6,be),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_108_boot)
HXDLIN( 108)		_UdpSocket_Send = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_Send",b2,8b,4e,47),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_116_boot)
HXDLIN( 116)		_UdpSocket_SendAll = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_SendAll",8f,00,f4,13),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_122_boot)
HXDLIN( 122)		_UdpSocket_Receive = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_Receive",b9,c1,bd,95),(int)3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_128_boot)
HXDLIN( 128)		_UdpSocket_SetTimeoutSend = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_SetTimeoutSend",f1,5a,b7,a1),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_134_boot)
HXDLIN( 134)		_UdpSocket_SetTimeoutReceive = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_SetTimeoutReceive",da,c3,24,a9),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_140_boot)
HXDLIN( 140)		_UdpSocket_GetTimeoutSend = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_GetTimeoutSend",7d,72,97,81),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_146_boot)
HXDLIN( 146)		_UdpSocket_GetTimeoutReceive = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_GetTimeoutReceive",ce,eb,b6,85),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_151_boot)
HXDLIN( 151)		_UdpSocket__GetInetAddr = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket__GetInetAddr",c6,dd,f2,f1),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_155_boot)
HXDLIN( 155)		_UdpSocket_GetRemoteAddr = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_GetRemoteAddr",63,ad,6c,0c),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_161_boot)
HXDLIN( 161)		_UdpSocket_SetReceiveBufferSize = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_SetReceiveBufferSize",0c,aa,c5,44),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_167_boot)
HXDLIN( 167)		_UdpSocket_SetSendBufferSize = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_SetSendBufferSize",e1,53,47,79),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_173_boot)
HXDLIN( 173)		_UdpSocket_GetReceiveBufferSize = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_GetReceiveBufferSize",98,f2,0d,78),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_179_boot)
HXDLIN( 179)		_UdpSocket_GetSendBufferSize = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_GetSendBufferSize",d5,7b,d9,55),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_185_boot)
HXDLIN( 185)		_UdpSocket_SetReuseAddress = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_SetReuseAddress",38,ae,9d,a1),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_191_boot)
HXDLIN( 191)		_UdpSocket_SetEnableBroadcast = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_SetEnableBroadcast",66,e2,fd,06),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_197_boot)
HXDLIN( 197)		_UdpSocket_SetNonBlocking = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_SetNonBlocking",4a,32,77,82),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_203_boot)
HXDLIN( 203)		_UdpSocket_GetMaxMsgSize = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_GetMaxMsgSize",ea,55,df,ba),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_209_boot)
HXDLIN( 209)		_UdpSocket_GetTTL = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_GetTTL",e0,74,71,d8),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3b55fd67d557d2b7_215_boot)
HXDLIN( 215)		_UdpSocket_SetTTL = ::cpp::Lib_obj::load(HX_("hxudp",31,0e,57,31),HX_("_UdpSocket_SetTTL",54,c9,b9,a4),(int)2);
            	}
}

} // end namespace lib
} // end namespace hxudp
