// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_cdb_ColumnType
#include <cdb/ColumnType.h>
#endif
#ifndef INCLUDED_cdb_Parser
#include <cdb/Parser.h>
#endif
#ifndef INCLUDED_haxe_format_JsonParser
#include <haxe/format/JsonParser.h>
#endif
#ifndef INCLUDED_haxe_format_JsonPrinter
#include <haxe/format/JsonPrinter.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_42570a7f8dc3d70c_6_saveType,"cdb.Parser","saveType",0x5b27ae19,"cdb.Parser.saveType","cdb/Parser.hx",6,0xd52606f1)
HX_LOCAL_STACK_FRAME(_hx_pos_42570a7f8dc3d70c_17_getType,"cdb.Parser","getType",0xec4aa72e,"cdb.Parser.getType","cdb/Parser.hx",17,0xd52606f1)
HX_LOCAL_STACK_FRAME(_hx_pos_42570a7f8dc3d70c_39_parse,"cdb.Parser","parse",0x43c54971,"cdb.Parser.parse","cdb/Parser.hx",39,0xd52606f1)
HX_LOCAL_STACK_FRAME(_hx_pos_42570a7f8dc3d70c_56_save,"cdb.Parser","save",0xb55f43bf,"cdb.Parser.save","cdb/Parser.hx",56,0xd52606f1)
namespace cdb{

void Parser_obj::__construct() { }

Dynamic Parser_obj::__CreateEmpty() { return new Parser_obj; }

void *Parser_obj::_hx_vtable = 0;

Dynamic Parser_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Parser_obj > _hx_result = new Parser_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Parser_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x36ec5360;
}

::String Parser_obj::saveType( ::cdb::ColumnType t){
            	HX_STACKFRAME(&_hx_pos_42570a7f8dc3d70c_6_saveType)
HXDLIN(   6)		switch((int)(_hx_getEnumValueIndex(t))){
            			case (int)5: {
HXLINE(   9)				::Array< ::String > values = t->_hx_getObject(0).StaticCast< ::Array< ::String > >();
HXLINE(  10)				::String _hx_tmp = (_hx_getEnumValueIndex(t) + HX_(":",3a,00,00,00));
HXDLIN(  10)				return (_hx_tmp + values->join(HX_(",",2c,00,00,00)));
            			}
            			break;
            			case (int)6: case (int)9: case (int)12: {
HXLINE(   8)				::String _hx_tmp1 = (_hx_getEnumValueIndex(t) + HX_(":",3a,00,00,00));
HXDLIN(   8)				return (_hx_tmp1 + ::Std_obj::string(::Type_obj::enumParameters(t)->__get((int)0)));
            			}
            			break;
            			case (int)10: {
HXLINE(   9)				::Array< ::String > values1 = t->_hx_getObject(0).StaticCast< ::Array< ::String > >();
HXLINE(  10)				::String _hx_tmp2 = (_hx_getEnumValueIndex(t) + HX_(":",3a,00,00,00));
HXDLIN(  10)				return (_hx_tmp2 + values1->join(HX_(",",2c,00,00,00)));
            			}
            			break;
            			case (int)0: case (int)1: case (int)2: case (int)3: case (int)4: case (int)7: case (int)8: case (int)11: case (int)13: case (int)14: case (int)15: case (int)16: {
HXLINE(  12)				return ::Std_obj::string(_hx_getEnumValueIndex(t));
            			}
            			break;
            		}
HXLINE(   6)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,saveType,return )

 ::cdb::ColumnType Parser_obj::getType(::String str){
            	HX_STACKFRAME(&_hx_pos_42570a7f8dc3d70c_17_getType)
HXDLIN(  17)		 ::Dynamic _g = ::Std_obj::parseInt(str);
HXDLIN(  17)		if (hx::IsNull( _g )) {
HXLINE(  35)			HX_STACK_DO_THROW((HX_("Unknown type ",f0,b2,b0,b7) + str));
            		}
            		else {
HXDLIN(  17)			 ::Dynamic _hx_switch_0 = _g;
            			if (  (_hx_switch_0==(int)0) ){
HXLINE(  18)				return ::cdb::ColumnType_obj::TId_dyn();
HXDLIN(  18)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)1) ){
HXLINE(  19)				return ::cdb::ColumnType_obj::TString_dyn();
HXDLIN(  19)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)2) ){
HXLINE(  20)				return ::cdb::ColumnType_obj::TBool_dyn();
HXDLIN(  20)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)3) ){
HXLINE(  21)				return ::cdb::ColumnType_obj::TInt_dyn();
HXDLIN(  21)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)4) ){
HXLINE(  22)				return ::cdb::ColumnType_obj::TFloat_dyn();
HXDLIN(  22)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)5) ){
HXLINE(  23)				return ::cdb::ColumnType_obj::TEnum(str.substr((str.indexOf(HX_(":",3a,00,00,00),null()) + (int)1),null()).split(HX_(",",2c,00,00,00)));
HXDLIN(  23)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)6) ){
HXLINE(  24)				return ::cdb::ColumnType_obj::TRef(str.substr((str.indexOf(HX_(":",3a,00,00,00),null()) + (int)1),null()));
HXDLIN(  24)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)7) ){
HXLINE(  25)				return ::cdb::ColumnType_obj::TImage_dyn();
HXDLIN(  25)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)8) ){
HXLINE(  26)				return ::cdb::ColumnType_obj::TList_dyn();
HXDLIN(  26)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)9) ){
HXLINE(  27)				return ::cdb::ColumnType_obj::TCustom(str.substr((str.indexOf(HX_(":",3a,00,00,00),null()) + (int)1),null()));
HXDLIN(  27)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)10) ){
HXLINE(  28)				return ::cdb::ColumnType_obj::TFlags(str.substr((str.indexOf(HX_(":",3a,00,00,00),null()) + (int)1),null()).split(HX_(",",2c,00,00,00)));
HXDLIN(  28)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)11) ){
HXLINE(  29)				return ::cdb::ColumnType_obj::TColor_dyn();
HXDLIN(  29)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)12) ){
HXLINE(  30)				return ::cdb::ColumnType_obj::TLayer(str.substr((str.indexOf(HX_(":",3a,00,00,00),null()) + (int)1),null()));
HXDLIN(  30)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)13) ){
HXLINE(  31)				return ::cdb::ColumnType_obj::TFile_dyn();
HXDLIN(  31)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)14) ){
HXLINE(  32)				return ::cdb::ColumnType_obj::TTilePos_dyn();
HXDLIN(  32)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)15) ){
HXLINE(  33)				return ::cdb::ColumnType_obj::TTileLayer_dyn();
HXDLIN(  33)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==(int)16) ){
HXLINE(  34)				return ::cdb::ColumnType_obj::TDynamic_dyn();
HXDLIN(  34)				goto _hx_goto_1;
            			}
            			/* default */{
HXLINE(  35)				HX_STACK_DO_THROW((HX_("Unknown type ",f0,b2,b0,b7) + str));
            			}
            			_hx_goto_1:;
            		}
HXLINE(  17)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,getType,return )

 ::Dynamic Parser_obj::parse(::String content){
            	HX_GC_STACKFRAME(&_hx_pos_42570a7f8dc3d70c_39_parse)
HXLINE(  40)		if (hx::IsNull( content )) {
HXLINE(  40)			HX_STACK_DO_THROW(HX_("CDB content is null",f7,9c,6d,9a));
            		}
HXLINE(  41)		 ::Dynamic data =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,content)->parseRec();
HXLINE(  42)		{
HXLINE(  42)			int _g = (int)0;
HXDLIN(  42)			::Array< ::Dynamic> _g1 = ( (::Array< ::Dynamic>)(data->__Field(HX_("sheets",f4,68,c6,1f),hx::paccDynamic)) );
HXDLIN(  42)			while((_g < _g1->length)){
HXLINE(  42)				 ::Dynamic s = _g1->__get(_g);
HXDLIN(  42)				_g = (_g + (int)1);
HXLINE(  43)				{
HXLINE(  43)					int _g2 = (int)0;
HXDLIN(  43)					::Array< ::Dynamic> _g3 = ( (::Array< ::Dynamic>)(s->__Field(HX_("columns",dd,ac,59,f3),hx::paccDynamic)) );
HXDLIN(  43)					while((_g2 < _g3->length)){
HXLINE(  43)						 ::Dynamic c = _g3->__get(_g2);
HXDLIN(  43)						_g2 = (_g2 + (int)1);
HXLINE(  44)						c->__SetField(HX_("type",ba,f2,08,4d),::cdb::Parser_obj::getType(( (::String)(c->__Field(HX_("typeStr",17,5e,cb,f8),hx::paccDynamic)) )),hx::paccDynamic);
HXLINE(  45)						c->__SetField(HX_("typeStr",17,5e,cb,f8),null(),hx::paccDynamic);
            					}
            				}
            			}
            		}
HXLINE(  47)		{
HXLINE(  47)			int _g4 = (int)0;
HXDLIN(  47)			::Array< ::Dynamic> _g11 = ( (::Array< ::Dynamic>)(data->__Field(HX_("customTypes",08,d7,07,b0),hx::paccDynamic)) );
HXDLIN(  47)			while((_g4 < _g11->length)){
HXLINE(  47)				 ::Dynamic t = _g11->__get(_g4);
HXDLIN(  47)				_g4 = (_g4 + (int)1);
HXLINE(  48)				{
HXLINE(  48)					int _g21 = (int)0;
HXDLIN(  48)					::Array< ::Dynamic> _g31 = ( (::Array< ::Dynamic>)(t->__Field(HX_("cases",c3,bb,20,41),hx::paccDynamic)) );
HXDLIN(  48)					while((_g21 < _g31->length)){
HXLINE(  48)						 ::Dynamic c1 = _g31->__get(_g21);
HXDLIN(  48)						_g21 = (_g21 + (int)1);
HXLINE(  49)						{
HXLINE(  49)							int _g41 = (int)0;
HXDLIN(  49)							::Array< ::Dynamic> _g5 = ( (::Array< ::Dynamic>)(c1->__Field(HX_("args",5d,8d,74,40),hx::paccDynamic)) );
HXDLIN(  49)							while((_g41 < _g5->length)){
HXLINE(  49)								 ::Dynamic a = _g5->__get(_g41);
HXDLIN(  49)								_g41 = (_g41 + (int)1);
HXLINE(  50)								a->__SetField(HX_("type",ba,f2,08,4d),::cdb::Parser_obj::getType(( (::String)(a->__Field(HX_("typeStr",17,5e,cb,f8),hx::paccDynamic)) )),hx::paccDynamic);
HXLINE(  51)								a->__SetField(HX_("typeStr",17,5e,cb,f8),null(),hx::paccDynamic);
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE(  53)		return data;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parse,return )

::String Parser_obj::save( ::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_42570a7f8dc3d70c_56_save)
HXLINE(  57)		::Array< ::Dynamic> save = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  58)		{
HXLINE(  58)			int _g = (int)0;
HXDLIN(  58)			::Array< ::Dynamic> _g1 = ( (::Array< ::Dynamic>)(data->__Field(HX_("sheets",f4,68,c6,1f),hx::paccDynamic)) );
HXDLIN(  58)			while((_g < _g1->length)){
HXLINE(  58)				 ::Dynamic s = _g1->__get(_g);
HXDLIN(  58)				_g = (_g + (int)1);
HXLINE(  59)				{
HXLINE(  59)					int _g2 = (int)0;
HXDLIN(  59)					::Array< ::Dynamic> _g3 = ( (::Array< ::Dynamic>)(s->__Field(HX_("columns",dd,ac,59,f3),hx::paccDynamic)) );
HXDLIN(  59)					while((_g2 < _g3->length)){
HXLINE(  59)						 ::Dynamic c = _g3->__get(_g2);
HXDLIN(  59)						_g2 = (_g2 + (int)1);
HXLINE(  60)						save->push( ::Dynamic(c->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)));
HXLINE(  61)						if (hx::IsNull( ( (::String)(c->__Field(HX_("typeStr",17,5e,cb,f8),hx::paccDynamic)) ) )) {
HXLINE(  61)							c->__SetField(HX_("typeStr",17,5e,cb,f8),::cdb::Parser_obj::saveType(c->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)),hx::paccDynamic);
            						}
HXLINE(  62)						::Reflect_obj::deleteField(c,HX_("type",ba,f2,08,4d));
            					}
            				}
            			}
            		}
HXLINE(  65)		{
HXLINE(  65)			int _g4 = (int)0;
HXDLIN(  65)			::Array< ::Dynamic> _g11 = ( (::Array< ::Dynamic>)(data->__Field(HX_("customTypes",08,d7,07,b0),hx::paccDynamic)) );
HXDLIN(  65)			while((_g4 < _g11->length)){
HXLINE(  65)				 ::Dynamic t = _g11->__get(_g4);
HXDLIN(  65)				_g4 = (_g4 + (int)1);
HXLINE(  66)				{
HXLINE(  66)					int _g21 = (int)0;
HXDLIN(  66)					::Array< ::Dynamic> _g31 = ( (::Array< ::Dynamic>)(t->__Field(HX_("cases",c3,bb,20,41),hx::paccDynamic)) );
HXDLIN(  66)					while((_g21 < _g31->length)){
HXLINE(  66)						 ::Dynamic c1 = _g31->__get(_g21);
HXDLIN(  66)						_g21 = (_g21 + (int)1);
HXLINE(  67)						{
HXLINE(  67)							int _g41 = (int)0;
HXDLIN(  67)							::Array< ::Dynamic> _g5 = ( (::Array< ::Dynamic>)(c1->__Field(HX_("args",5d,8d,74,40),hx::paccDynamic)) );
HXDLIN(  67)							while((_g41 < _g5->length)){
HXLINE(  67)								 ::Dynamic a = _g5->__get(_g41);
HXDLIN(  67)								_g41 = (_g41 + (int)1);
HXLINE(  68)								save->push( ::Dynamic(a->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)));
HXLINE(  69)								if (hx::IsNull( ( (::String)(a->__Field(HX_("typeStr",17,5e,cb,f8),hx::paccDynamic)) ) )) {
HXLINE(  69)									a->__SetField(HX_("typeStr",17,5e,cb,f8),::cdb::Parser_obj::saveType(a->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)),hx::paccDynamic);
            								}
HXLINE(  70)								::Reflect_obj::deleteField(a,HX_("type",ba,f2,08,4d));
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE(  72)		::String str = ::haxe::format::JsonPrinter_obj::print(data,null(),HX_("\t",09,00,00,00));
HXLINE(  73)		{
HXLINE(  73)			int _g6 = (int)0;
HXDLIN(  73)			::Array< ::Dynamic> _g12 = ( (::Array< ::Dynamic>)(data->__Field(HX_("sheets",f4,68,c6,1f),hx::paccDynamic)) );
HXDLIN(  73)			while((_g6 < _g12->length)){
HXLINE(  73)				 ::Dynamic s1 = _g12->__get(_g6);
HXDLIN(  73)				_g6 = (_g6 + (int)1);
HXLINE(  74)				{
HXLINE(  74)					int _g22 = (int)0;
HXDLIN(  74)					::Array< ::Dynamic> _g32 = ( (::Array< ::Dynamic>)(s1->__Field(HX_("columns",dd,ac,59,f3),hx::paccDynamic)) );
HXDLIN(  74)					while((_g22 < _g32->length)){
HXLINE(  74)						 ::Dynamic c2 = _g32->__get(_g22);
HXDLIN(  74)						_g22 = (_g22 + (int)1);
HXLINE(  75)						c2->__SetField(HX_("type",ba,f2,08,4d),save->shift().StaticCast<  ::cdb::ColumnType >(),hx::paccDynamic);
            					}
            				}
            			}
            		}
HXLINE(  76)		{
HXLINE(  76)			int _g7 = (int)0;
HXDLIN(  76)			::Array< ::Dynamic> _g13 = ( (::Array< ::Dynamic>)(data->__Field(HX_("customTypes",08,d7,07,b0),hx::paccDynamic)) );
HXDLIN(  76)			while((_g7 < _g13->length)){
HXLINE(  76)				 ::Dynamic t1 = _g13->__get(_g7);
HXDLIN(  76)				_g7 = (_g7 + (int)1);
HXLINE(  77)				{
HXLINE(  77)					int _g23 = (int)0;
HXDLIN(  77)					::Array< ::Dynamic> _g33 = ( (::Array< ::Dynamic>)(t1->__Field(HX_("cases",c3,bb,20,41),hx::paccDynamic)) );
HXDLIN(  77)					while((_g23 < _g33->length)){
HXLINE(  77)						 ::Dynamic c3 = _g33->__get(_g23);
HXDLIN(  77)						_g23 = (_g23 + (int)1);
HXLINE(  78)						{
HXLINE(  78)							int _g42 = (int)0;
HXDLIN(  78)							::Array< ::Dynamic> _g51 = ( (::Array< ::Dynamic>)(c3->__Field(HX_("args",5d,8d,74,40),hx::paccDynamic)) );
HXDLIN(  78)							while((_g42 < _g51->length)){
HXLINE(  78)								 ::Dynamic a1 = _g51->__get(_g42);
HXDLIN(  78)								_g42 = (_g42 + (int)1);
HXLINE(  79)								a1->__SetField(HX_("type",ba,f2,08,4d),save->shift().StaticCast<  ::cdb::ColumnType >(),hx::paccDynamic);
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE(  80)		return str;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,save,return )


Parser_obj::Parser_obj()
{
}

bool Parser_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"save") ) { outValue = save_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"parse") ) { outValue = parse_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getType") ) { outValue = getType_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"saveType") ) { outValue = saveType_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Parser_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Parser_obj_sStaticStorageInfo = 0;
#endif

static void Parser_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Parser_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Parser_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Parser_obj::__mClass,"__mClass");
};

#endif

hx::Class Parser_obj::__mClass;

static ::String Parser_obj_sStaticFields[] = {
	HX_HCSTRING("saveType","\x97","\x8c","\xc2","\x00"),
	HX_HCSTRING("getType","\x70","\xa2","\x8b","\x1f"),
	HX_HCSTRING("parse","\x33","\x90","\x55","\xbd"),
	HX_HCSTRING("save","\x3d","\x8b","\x4d","\x4c"),
	::String(null())
};

void Parser_obj::__register()
{
	hx::Object *dummy = new Parser_obj;
	Parser_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("cdb.Parser","\x2c","\x77","\x61","\x43");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Parser_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Parser_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Parser_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Parser_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Parser_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Parser_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Parser_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace cdb
