// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_cdb__Data_TileMode_Impl_
#include <cdb/_Data/TileMode_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_117bac94fcf14868_59__new,"cdb._Data.TileMode_Impl_","_new",0x5cf494ec,"cdb._Data.TileMode_Impl_._new","cdb/Data.hx",59,0x12d53e06)
HX_LOCAL_STACK_FRAME(_hx_pos_117bac94fcf14868_63_ofString,"cdb._Data.TileMode_Impl_","ofString",0xbce50a53,"cdb._Data.TileMode_Impl_.ofString","cdb/Data.hx",63,0x12d53e06)
HX_LOCAL_STACK_FRAME(_hx_pos_117bac94fcf14868_66_toString,"cdb._Data.TileMode_Impl_","toString",0x512271b7,"cdb._Data.TileMode_Impl_.toString","cdb/Data.hx",66,0x12d53e06)
HX_LOCAL_STACK_FRAME(_hx_pos_117bac94fcf14868_54_boot,"cdb._Data.TileMode_Impl_","boot",0x5ef103bd,"cdb._Data.TileMode_Impl_.boot","cdb/Data.hx",54,0x12d53e06)
HX_LOCAL_STACK_FRAME(_hx_pos_117bac94fcf14868_55_boot,"cdb._Data.TileMode_Impl_","boot",0x5ef103bd,"cdb._Data.TileMode_Impl_.boot","cdb/Data.hx",55,0x12d53e06)
HX_LOCAL_STACK_FRAME(_hx_pos_117bac94fcf14868_56_boot,"cdb._Data.TileMode_Impl_","boot",0x5ef103bd,"cdb._Data.TileMode_Impl_.boot","cdb/Data.hx",56,0x12d53e06)
HX_LOCAL_STACK_FRAME(_hx_pos_117bac94fcf14868_57_boot,"cdb._Data.TileMode_Impl_","boot",0x5ef103bd,"cdb._Data.TileMode_Impl_.boot","cdb/Data.hx",57,0x12d53e06)
HX_LOCAL_STACK_FRAME(_hx_pos_117bac94fcf14868_58_boot,"cdb._Data.TileMode_Impl_","boot",0x5ef103bd,"cdb._Data.TileMode_Impl_.boot","cdb/Data.hx",58,0x12d53e06)
namespace cdb{
namespace _Data{

void TileMode_Impl__obj::__construct() { }

Dynamic TileMode_Impl__obj::__CreateEmpty() { return new TileMode_Impl__obj; }

void *TileMode_Impl__obj::_hx_vtable = 0;

Dynamic TileMode_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TileMode_Impl__obj > _hx_result = new TileMode_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TileMode_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5b69fad9;
}

::String TileMode_Impl__obj::Tile;

::String TileMode_Impl__obj::Ground;

::String TileMode_Impl__obj::Border;

::String TileMode_Impl__obj::Object;

::String TileMode_Impl__obj::Group;

::String TileMode_Impl__obj::_new(::String s){
            	HX_STACKFRAME(&_hx_pos_117bac94fcf14868_59__new)
HXDLIN(  59)		::String this1 = s;
HXDLIN(  59)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TileMode_Impl__obj,_new,return )

::String TileMode_Impl__obj::ofString(::String s){
            	HX_STACKFRAME(&_hx_pos_117bac94fcf14868_63_ofString)
HXDLIN(  63)		return ::cdb::_Data::TileMode_Impl__obj::_new(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TileMode_Impl__obj,ofString,return )

::String TileMode_Impl__obj::toString(::String this1){
            	HX_STACKFRAME(&_hx_pos_117bac94fcf14868_66_toString)
HXDLIN(  66)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TileMode_Impl__obj,toString,return )


TileMode_Impl__obj::TileMode_Impl__obj()
{
}

bool TileMode_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"ofString") ) { outValue = ofString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *TileMode_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo TileMode_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &TileMode_Impl__obj::Tile,HX_HCSTRING("Tile","\x4e","\xf7","\xd5","\x37")},
	{hx::fsString,(void *) &TileMode_Impl__obj::Ground,HX_HCSTRING("Ground","\xa7","\x96","\xbc","\x50")},
	{hx::fsString,(void *) &TileMode_Impl__obj::Border,HX_HCSTRING("Border","\x0c","\xc1","\xae","\x98")},
	{hx::fsString,(void *) &TileMode_Impl__obj::Object,HX_HCSTRING("Object","\xdf","\xf2","\xd3","\x49")},
	{hx::fsString,(void *) &TileMode_Impl__obj::Group,HX_HCSTRING("Group","\x1f","\x23","\x22","\x2d")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void TileMode_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TileMode_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(TileMode_Impl__obj::Tile,"Tile");
	HX_MARK_MEMBER_NAME(TileMode_Impl__obj::Ground,"Ground");
	HX_MARK_MEMBER_NAME(TileMode_Impl__obj::Border,"Border");
	HX_MARK_MEMBER_NAME(TileMode_Impl__obj::Object,"Object");
	HX_MARK_MEMBER_NAME(TileMode_Impl__obj::Group,"Group");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TileMode_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TileMode_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(TileMode_Impl__obj::Tile,"Tile");
	HX_VISIT_MEMBER_NAME(TileMode_Impl__obj::Ground,"Ground");
	HX_VISIT_MEMBER_NAME(TileMode_Impl__obj::Border,"Border");
	HX_VISIT_MEMBER_NAME(TileMode_Impl__obj::Object,"Object");
	HX_VISIT_MEMBER_NAME(TileMode_Impl__obj::Group,"Group");
};

#endif

hx::Class TileMode_Impl__obj::__mClass;

static ::String TileMode_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("Tile","\x4e","\xf7","\xd5","\x37"),
	HX_HCSTRING("Ground","\xa7","\x96","\xbc","\x50"),
	HX_HCSTRING("Border","\x0c","\xc1","\xae","\x98"),
	HX_HCSTRING("Object","\xdf","\xf2","\xd3","\x49"),
	HX_HCSTRING("Group","\x1f","\x23","\x22","\x2d"),
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("ofString","\x48","\x69","\x31","\xa4"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null())
};

void TileMode_Impl__obj::__register()
{
	hx::Object *dummy = new TileMode_Impl__obj;
	TileMode_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("cdb._Data.TileMode_Impl_","\xc3","\x0c","\x65","\x10");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TileMode_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TileMode_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(TileMode_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< TileMode_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TileMode_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TileMode_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TileMode_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void TileMode_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_117bac94fcf14868_54_boot)
HXDLIN(  54)		Tile = HX_("tile",2e,cb,fc,4c);
            	}
{
            	HX_STACKFRAME(&_hx_pos_117bac94fcf14868_55_boot)
HXDLIN(  55)		Ground = HX_("ground",87,22,28,1c);
            	}
{
            	HX_STACKFRAME(&_hx_pos_117bac94fcf14868_56_boot)
HXDLIN(  56)		Border = HX_("border",ec,4c,1a,64);
            	}
{
            	HX_STACKFRAME(&_hx_pos_117bac94fcf14868_57_boot)
HXDLIN(  57)		Object = HX_("object",bf,7e,3f,15);
            	}
{
            	HX_STACKFRAME(&_hx_pos_117bac94fcf14868_58_boot)
HXDLIN(  58)		Group = HX_("group",3f,b3,f4,99);
            	}
}

} // end namespace cdb
} // end namespace _Data
