// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_cdb_ColumnType
#include <cdb/ColumnType.h>
#endif
namespace cdb{

::cdb::ColumnType ColumnType_obj::TBool;

::cdb::ColumnType ColumnType_obj::TColor;

::cdb::ColumnType ColumnType_obj::TCustom(::String name)
{
	return hx::CreateEnum< ColumnType_obj >(HX_("TCustom",25,f3,31,19),9,1)->_hx_init(0,name);
}

::cdb::ColumnType ColumnType_obj::TDynamic;

::cdb::ColumnType ColumnType_obj::TEnum(::Array< ::String > values)
{
	return hx::CreateEnum< ColumnType_obj >(HX_("TEnum",75,51,98,8b),5,1)->_hx_init(0,values);
}

::cdb::ColumnType ColumnType_obj::TFile;

::cdb::ColumnType ColumnType_obj::TFlags(::Array< ::String > values)
{
	return hx::CreateEnum< ColumnType_obj >(HX_("TFlags",53,ea,b3,2b),10,1)->_hx_init(0,values);
}

::cdb::ColumnType ColumnType_obj::TFloat;

::cdb::ColumnType ColumnType_obj::TId;

::cdb::ColumnType ColumnType_obj::TImage;

::cdb::ColumnType ColumnType_obj::TInt;

::cdb::ColumnType ColumnType_obj::TLayer(::String type)
{
	return hx::CreateEnum< ColumnType_obj >(HX_("TLayer",dd,40,e8,98),12,1)->_hx_init(0,type);
}

::cdb::ColumnType ColumnType_obj::TList;

::cdb::ColumnType ColumnType_obj::TRef(::String sheet)
{
	return hx::CreateEnum< ColumnType_obj >(HX_("TRef",5f,7d,c4,37),6,1)->_hx_init(0,sheet);
}

::cdb::ColumnType ColumnType_obj::TString;

::cdb::ColumnType ColumnType_obj::TTileLayer;

::cdb::ColumnType ColumnType_obj::TTilePos;

bool ColumnType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("TBool",9e,6a,9d,89)) { outValue = ColumnType_obj::TBool; return true; }
	if (inName==HX_("TColor",6f,30,84,73)) { outValue = ColumnType_obj::TColor; return true; }
	if (inName==HX_("TCustom",25,f3,31,19)) { outValue = ColumnType_obj::TCustom_dyn(); return true; }
	if (inName==HX_("TDynamic",8b,39,f4,c7)) { outValue = ColumnType_obj::TDynamic; return true; }
	if (inName==HX_("TEnum",75,51,98,8b)) { outValue = ColumnType_obj::TEnum_dyn(); return true; }
	if (inName==HX_("TFile",f0,b4,3d,8c)) { outValue = ColumnType_obj::TFile; return true; }
	if (inName==HX_("TFlags",53,ea,b3,2b)) { outValue = ColumnType_obj::TFlags_dyn(); return true; }
	if (inName==HX_("TFloat",a8,84,be,2b)) { outValue = ColumnType_obj::TFloat; return true; }
	if (inName==HX_("TId",4f,fd,3f,00)) { outValue = ColumnType_obj::TId; return true; }
	if (inName==HX_("TImage",67,de,90,e6)) { outValue = ColumnType_obj::TImage; return true; }
	if (inName==HX_("TInt",fb,b0,bd,37)) { outValue = ColumnType_obj::TInt; return true; }
	if (inName==HX_("TLayer",dd,40,e8,98)) { outValue = ColumnType_obj::TLayer_dyn(); return true; }
	if (inName==HX_("TList",d2,02,35,90)) { outValue = ColumnType_obj::TList; return true; }
	if (inName==HX_("TRef",5f,7d,c4,37)) { outValue = ColumnType_obj::TRef_dyn(); return true; }
	if (inName==HX_("TString",45,94,cf,ea)) { outValue = ColumnType_obj::TString; return true; }
	if (inName==HX_("TTileLayer",cf,14,5e,b5)) { outValue = ColumnType_obj::TTileLayer; return true; }
	if (inName==HX_("TTilePos",12,95,57,d7)) { outValue = ColumnType_obj::TTilePos; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(ColumnType_obj)

int ColumnType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("TBool",9e,6a,9d,89)) return 2;
	if (inName==HX_("TColor",6f,30,84,73)) return 11;
	if (inName==HX_("TCustom",25,f3,31,19)) return 9;
	if (inName==HX_("TDynamic",8b,39,f4,c7)) return 16;
	if (inName==HX_("TEnum",75,51,98,8b)) return 5;
	if (inName==HX_("TFile",f0,b4,3d,8c)) return 13;
	if (inName==HX_("TFlags",53,ea,b3,2b)) return 10;
	if (inName==HX_("TFloat",a8,84,be,2b)) return 4;
	if (inName==HX_("TId",4f,fd,3f,00)) return 0;
	if (inName==HX_("TImage",67,de,90,e6)) return 7;
	if (inName==HX_("TInt",fb,b0,bd,37)) return 3;
	if (inName==HX_("TLayer",dd,40,e8,98)) return 12;
	if (inName==HX_("TList",d2,02,35,90)) return 8;
	if (inName==HX_("TRef",5f,7d,c4,37)) return 6;
	if (inName==HX_("TString",45,94,cf,ea)) return 1;
	if (inName==HX_("TTileLayer",cf,14,5e,b5)) return 15;
	if (inName==HX_("TTilePos",12,95,57,d7)) return 14;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColumnType_obj,TCustom,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColumnType_obj,TEnum,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColumnType_obj,TFlags,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColumnType_obj,TLayer,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ColumnType_obj,TRef,return)

int ColumnType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("TBool",9e,6a,9d,89)) return 0;
	if (inName==HX_("TColor",6f,30,84,73)) return 0;
	if (inName==HX_("TCustom",25,f3,31,19)) return 1;
	if (inName==HX_("TDynamic",8b,39,f4,c7)) return 0;
	if (inName==HX_("TEnum",75,51,98,8b)) return 1;
	if (inName==HX_("TFile",f0,b4,3d,8c)) return 0;
	if (inName==HX_("TFlags",53,ea,b3,2b)) return 1;
	if (inName==HX_("TFloat",a8,84,be,2b)) return 0;
	if (inName==HX_("TId",4f,fd,3f,00)) return 0;
	if (inName==HX_("TImage",67,de,90,e6)) return 0;
	if (inName==HX_("TInt",fb,b0,bd,37)) return 0;
	if (inName==HX_("TLayer",dd,40,e8,98)) return 1;
	if (inName==HX_("TList",d2,02,35,90)) return 0;
	if (inName==HX_("TRef",5f,7d,c4,37)) return 1;
	if (inName==HX_("TString",45,94,cf,ea)) return 0;
	if (inName==HX_("TTileLayer",cf,14,5e,b5)) return 0;
	if (inName==HX_("TTilePos",12,95,57,d7)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val ColumnType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("TBool",9e,6a,9d,89)) return TBool;
	if (inName==HX_("TColor",6f,30,84,73)) return TColor;
	if (inName==HX_("TCustom",25,f3,31,19)) return TCustom_dyn();
	if (inName==HX_("TDynamic",8b,39,f4,c7)) return TDynamic;
	if (inName==HX_("TEnum",75,51,98,8b)) return TEnum_dyn();
	if (inName==HX_("TFile",f0,b4,3d,8c)) return TFile;
	if (inName==HX_("TFlags",53,ea,b3,2b)) return TFlags_dyn();
	if (inName==HX_("TFloat",a8,84,be,2b)) return TFloat;
	if (inName==HX_("TId",4f,fd,3f,00)) return TId;
	if (inName==HX_("TImage",67,de,90,e6)) return TImage;
	if (inName==HX_("TInt",fb,b0,bd,37)) return TInt;
	if (inName==HX_("TLayer",dd,40,e8,98)) return TLayer_dyn();
	if (inName==HX_("TList",d2,02,35,90)) return TList;
	if (inName==HX_("TRef",5f,7d,c4,37)) return TRef_dyn();
	if (inName==HX_("TString",45,94,cf,ea)) return TString;
	if (inName==HX_("TTileLayer",cf,14,5e,b5)) return TTileLayer;
	if (inName==HX_("TTilePos",12,95,57,d7)) return TTilePos;
	return super::__Field(inName,inCallProp);
}

static ::String ColumnType_obj_sStaticFields[] = {
	HX_("TId",4f,fd,3f,00),
	HX_("TString",45,94,cf,ea),
	HX_("TBool",9e,6a,9d,89),
	HX_("TInt",fb,b0,bd,37),
	HX_("TFloat",a8,84,be,2b),
	HX_("TEnum",75,51,98,8b),
	HX_("TRef",5f,7d,c4,37),
	HX_("TImage",67,de,90,e6),
	HX_("TList",d2,02,35,90),
	HX_("TCustom",25,f3,31,19),
	HX_("TFlags",53,ea,b3,2b),
	HX_("TColor",6f,30,84,73),
	HX_("TLayer",dd,40,e8,98),
	HX_("TFile",f0,b4,3d,8c),
	HX_("TTilePos",12,95,57,d7),
	HX_("TTileLayer",cf,14,5e,b5),
	HX_("TDynamic",8b,39,f4,c7),
	::String(null())
};

static void ColumnType_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ColumnType_obj::TBool,"TBool");
	HX_MARK_MEMBER_NAME(ColumnType_obj::TColor,"TColor");
	HX_MARK_MEMBER_NAME(ColumnType_obj::TDynamic,"TDynamic");
	HX_MARK_MEMBER_NAME(ColumnType_obj::TFile,"TFile");
	HX_MARK_MEMBER_NAME(ColumnType_obj::TFloat,"TFloat");
	HX_MARK_MEMBER_NAME(ColumnType_obj::TId,"TId");
	HX_MARK_MEMBER_NAME(ColumnType_obj::TImage,"TImage");
	HX_MARK_MEMBER_NAME(ColumnType_obj::TInt,"TInt");
	HX_MARK_MEMBER_NAME(ColumnType_obj::TList,"TList");
	HX_MARK_MEMBER_NAME(ColumnType_obj::TString,"TString");
	HX_MARK_MEMBER_NAME(ColumnType_obj::TTileLayer,"TTileLayer");
	HX_MARK_MEMBER_NAME(ColumnType_obj::TTilePos,"TTilePos");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ColumnType_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ColumnType_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TBool,"TBool");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TColor,"TColor");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TDynamic,"TDynamic");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TFile,"TFile");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TFloat,"TFloat");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TId,"TId");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TImage,"TImage");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TInt,"TInt");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TList,"TList");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TString,"TString");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TTileLayer,"TTileLayer");
	HX_VISIT_MEMBER_NAME(ColumnType_obj::TTilePos,"TTilePos");
};
#endif

hx::Class ColumnType_obj::__mClass;

Dynamic __Create_ColumnType_obj() { return new ColumnType_obj; }

void ColumnType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("cdb.ColumnType","\x7d","\x15","\x15","\xeb"), hx::TCanCast< ColumnType_obj >,ColumnType_obj_sStaticFields,0,
	&__Create_ColumnType_obj, &__Create,
	&super::__SGetClass(), &CreateColumnType_obj, ColumnType_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , ColumnType_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &ColumnType_obj::__GetStatic;
}

void ColumnType_obj::__boot()
{
TBool = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TBool","\x9e","\x6a","\x9d","\x89"),2,0);
TColor = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TColor","\x6f","\x30","\x84","\x73"),11,0);
TDynamic = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TDynamic","\x8b","\x39","\xf4","\xc7"),16,0);
TFile = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TFile","\xf0","\xb4","\x3d","\x8c"),13,0);
TFloat = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TFloat","\xa8","\x84","\xbe","\x2b"),4,0);
TId = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TId","\x4f","\xfd","\x3f","\x00"),0,0);
TImage = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TImage","\x67","\xde","\x90","\xe6"),7,0);
TInt = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TInt","\xfb","\xb0","\xbd","\x37"),3,0);
TList = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TList","\xd2","\x02","\x35","\x90"),8,0);
TString = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TString","\x45","\x94","\xcf","\xea"),1,0);
TTileLayer = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TTileLayer","\xcf","\x14","\x5e","\xb5"),15,0);
TTilePos = hx::CreateEnum< ColumnType_obj >(HX_HCSTRING("TTilePos","\x12","\x95","\x57","\xd7"),14,0);
}


} // end namespace cdb
