// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_cdb_Index
#include <cdb/Index.h>
#endif
#ifndef INCLUDED_cdb__Types_LevelPropsAccess_Impl_
#include <cdb/_Types/LevelPropsAccess_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_be99cb1a354fd6b5_142_get_tileSize,"cdb._Types.LevelPropsAccess_Impl_","get_tileSize",0xe293ad4f,"cdb._Types.LevelPropsAccess_Impl_.get_tileSize","cdb/Types.hx",142,0xc287d473)
HX_LOCAL_STACK_FRAME(_hx_pos_be99cb1a354fd6b5_146_getTileset,"cdb._Types.LevelPropsAccess_Impl_","getTileset",0xd6556db5,"cdb._Types.LevelPropsAccess_Impl_.getTileset","cdb/Types.hx",146,0xc287d473)
HX_LOCAL_STACK_FRAME(_hx_pos_be99cb1a354fd6b5_149_getLayer,"cdb._Types.LevelPropsAccess_Impl_","getLayer",0xeb169c12,"cdb._Types.LevelPropsAccess_Impl_.getLayer","cdb/Types.hx",149,0xc287d473)
namespace cdb{
namespace _Types{

void LevelPropsAccess_Impl__obj::__construct() { }

Dynamic LevelPropsAccess_Impl__obj::__CreateEmpty() { return new LevelPropsAccess_Impl__obj; }

void *LevelPropsAccess_Impl__obj::_hx_vtable = 0;

Dynamic LevelPropsAccess_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< LevelPropsAccess_Impl__obj > _hx_result = new LevelPropsAccess_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool LevelPropsAccess_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4ce3b08b;
}

 ::Dynamic LevelPropsAccess_Impl__obj::get_tileSize( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_be99cb1a354fd6b5_142_get_tileSize)
HXDLIN( 142)		return this1->__Field(HX_("tileSize",0f,c7,59,86),hx::paccDynamic);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(LevelPropsAccess_Impl__obj,get_tileSize,return )

 ::Dynamic LevelPropsAccess_Impl__obj::getTileset( ::Dynamic this1, ::cdb::Index i,::String name){
            	HX_STACKFRAME(&_hx_pos_be99cb1a354fd6b5_146_getTileset)
HXDLIN( 146)		return ::Reflect_obj::field( ::Dynamic( ::Dynamic( ::Dynamic(i->sheet->__Field(HX_("props",70,e7,8f,c8),hx::paccDynamic))->__Field(HX_("level",84,15,63,72),hx::paccDynamic))->__Field(HX_("tileSets",df,b8,56,86),hx::paccDynamic)),name);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(LevelPropsAccess_Impl__obj,getTileset,return )

 ::Dynamic LevelPropsAccess_Impl__obj::getLayer( ::Dynamic this1,::String name){
            	HX_STACKFRAME(&_hx_pos_be99cb1a354fd6b5_149_getLayer)
HXLINE( 150)		bool _hx_tmp;
HXDLIN( 150)		if (hx::IsNotNull( this1 )) {
HXLINE( 150)			_hx_tmp = hx::IsNull( ( (::Array< ::Dynamic>)(this1->__Field(HX_("layers",82,15,b1,58),hx::paccDynamic)) ) );
            		}
            		else {
HXLINE( 150)			_hx_tmp = true;
            		}
HXDLIN( 150)		if (_hx_tmp) {
HXLINE( 150)			return null();
            		}
HXLINE( 151)		{
HXLINE( 151)			int _g = (int)0;
HXDLIN( 151)			::Array< ::Dynamic> _g1 = ( (::Array< ::Dynamic>)(this1->__Field(HX_("layers",82,15,b1,58),hx::paccDynamic)) );
HXDLIN( 151)			while((_g < _g1->length)){
HXLINE( 151)				 ::Dynamic l = _g1->__get(_g);
HXDLIN( 151)				_g = (_g + (int)1);
HXLINE( 152)				if ((( (::String)(l->__Field(HX_("l",6c,00,00,00),hx::paccDynamic)) ) == name)) {
HXLINE( 153)					return l->__Field(HX_("p",70,00,00,00),hx::paccDynamic);
            				}
            			}
            		}
HXLINE( 154)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(LevelPropsAccess_Impl__obj,getLayer,return )


LevelPropsAccess_Impl__obj::LevelPropsAccess_Impl__obj()
{
}

bool LevelPropsAccess_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"getLayer") ) { outValue = getLayer_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getTileset") ) { outValue = getTileset_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_tileSize") ) { outValue = get_tileSize_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *LevelPropsAccess_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *LevelPropsAccess_Impl__obj_sStaticStorageInfo = 0;
#endif

static void LevelPropsAccess_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(LevelPropsAccess_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void LevelPropsAccess_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(LevelPropsAccess_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class LevelPropsAccess_Impl__obj::__mClass;

static ::String LevelPropsAccess_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("get_tileSize","\x18","\x7b","\x73","\x3b"),
	HX_HCSTRING("getTileset","\x3e","\x07","\xf5","\x94"),
	HX_HCSTRING("getLayer","\x5b","\x91","\x97","\xcf"),
	::String(null())
};

void LevelPropsAccess_Impl__obj::__register()
{
	hx::Object *dummy = new LevelPropsAccess_Impl__obj;
	LevelPropsAccess_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("cdb._Types.LevelPropsAccess_Impl_","\x97","\x88","\xdd","\xe3");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &LevelPropsAccess_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = LevelPropsAccess_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(LevelPropsAccess_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< LevelPropsAccess_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = LevelPropsAccess_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LevelPropsAccess_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LevelPropsAccess_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace cdb
} // end namespace _Types
