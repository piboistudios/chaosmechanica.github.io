// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_cdb_Lz4Reader
#include <cdb/Lz4Reader.h>
#endif
#ifndef INCLUDED_cdb__Types_Layer_Impl_
#include <cdb/_Types/Layer_Impl_.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ea1008437d1f0dc5_96__new,"cdb._Types.Layer_Impl_","_new",0x71507c65,"cdb._Types.Layer_Impl_._new","cdb/Types.hx",96,0xc287d473)
HX_LOCAL_STACK_FRAME(_hx_pos_ea1008437d1f0dc5_100_decode,"cdb._Types.Layer_Impl_","decode",0x93898d32,"cdb._Types.Layer_Impl_.decode","cdb/Types.hx",100,0xc287d473)
HX_LOCAL_STACK_FRAME(_hx_pos_ea1008437d1f0dc5_105_encode,"cdb._Types.Layer_Impl_","encode",0x2880221a,"cdb._Types.Layer_Impl_.encode","cdb/Types.hx",105,0xc287d473)
namespace cdb{
namespace _Types{

void Layer_Impl__obj::__construct() { }

Dynamic Layer_Impl__obj::__CreateEmpty() { return new Layer_Impl__obj; }

void *Layer_Impl__obj::_hx_vtable = 0;

Dynamic Layer_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Layer_Impl__obj > _hx_result = new Layer_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Layer_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5e680376;
}

::String Layer_Impl__obj::_new(::String x){
            	HX_STACKFRAME(&_hx_pos_ea1008437d1f0dc5_96__new)
HXDLIN(  96)		::String this1 = x;
HXDLIN(  96)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Layer_Impl__obj,_new,return )

::cpp::VirtualArray Layer_Impl__obj::decode(::String this1,::cpp::VirtualArray all){
            	HX_STACKFRAME(&_hx_pos_ea1008437d1f0dc5_100_decode)
HXLINE( 101)		 ::haxe::io::Bytes k = ::cdb::Lz4Reader_obj::decodeString(this1);
HXLINE( 102)		::cpp::VirtualArray _g = ::cpp::VirtualArray_obj::__new(0);
HXDLIN( 102)		{
HXLINE( 102)			int _g2 = (int)0;
HXDLIN( 102)			int _g1 = k->length;
HXDLIN( 102)			while((_g2 < _g1)){
HXLINE( 102)				_g2 = (_g2 + (int)1);
HXDLIN( 102)				int i = (_g2 - (int)1);
HXDLIN( 102)				_g->push(all->__get(k->b->__get(i)));
            			}
            		}
HXDLIN( 102)		return _g;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Layer_Impl__obj,decode,return )

::String Layer_Impl__obj::encode(::Array< int > a,bool compress){
            	HX_STACKFRAME(&_hx_pos_ea1008437d1f0dc5_105_encode)
HXLINE( 106)		 ::haxe::io::Bytes b = ::haxe::io::Bytes_obj::alloc(a->length);
HXLINE( 107)		{
HXLINE( 107)			int _g1 = (int)0;
HXDLIN( 107)			int _g = a->length;
HXDLIN( 107)			while((_g1 < _g)){
HXLINE( 107)				_g1 = (_g1 + (int)1);
HXDLIN( 107)				int i = (_g1 - (int)1);
HXLINE( 108)				::Array< unsigned char > b1 = b->b;
HXDLIN( 108)				b1[i] = a->__get(i);
            			}
            		}
HXLINE( 109)		::String this1 = ::cdb::Lz4Reader_obj::encodeBytes(b,compress);
HXDLIN( 109)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Layer_Impl__obj,encode,return )


Layer_Impl__obj::Layer_Impl__obj()
{
}

bool Layer_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"decode") ) { outValue = decode_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"encode") ) { outValue = encode_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Layer_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Layer_Impl__obj_sStaticStorageInfo = 0;
#endif

static void Layer_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Layer_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Layer_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Layer_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class Layer_Impl__obj::__mClass;

static ::String Layer_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("decode","\x2e","\x5d","\xed","\x64"),
	HX_HCSTRING("encode","\x16","\xf2","\xe3","\xf9"),
	::String(null())
};

void Layer_Impl__obj::__register()
{
	hx::Object *dummy = new Layer_Impl__obj;
	Layer_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("cdb._Types.Layer_Impl_","\xea","\x57","\xa4","\x33");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Layer_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Layer_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Layer_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Layer_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Layer_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Layer_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Layer_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace cdb
} // end namespace _Types
