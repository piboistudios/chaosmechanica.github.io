// Generated by Haxe 3.4.4
#ifndef INCLUDED_util_control_TestNetworkController
#define INCLUDED_util_control_TestNetworkController

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_util_control_Controller
#include <util/control/Controller.h>
#endif
HX_DECLARE_CLASS2(util,control,Controller)
HX_DECLARE_CLASS2(util,control,TestNetworkController)

namespace util{
namespace control{


class HXCPP_CLASS_ATTRIBUTES TestNetworkController_obj : public  ::util::control::Controller_obj
{
	public:
		typedef  ::util::control::Controller_obj super;
		typedef TestNetworkController_obj OBJ_;
		TestNetworkController_obj();

	public:
		enum { _hx_ClassId = 0x14f75cc1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="util.control.TestNetworkController")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"util.control.TestNetworkController"); }
		static hx::ObjectPtr< TestNetworkController_obj > __new();
		static hx::ObjectPtr< TestNetworkController_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestNetworkController_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("TestNetworkController","\x18","\xf2","\x16","\x27"); }

		void populateBuffer();

};

} // end namespace util
} // end namespace control

#endif /* INCLUDED_util_control_TestNetworkController */ 
