// Generated by Haxe 3.4.4
#ifndef INCLUDED_util_control_Controller
#define INCLUDED_util_control_Controller

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Xml)
HX_DECLARE_CLASS2(util,control,Controller)

namespace util{
namespace control{


class HXCPP_CLASS_ATTRIBUTES Controller_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Controller_obj OBJ_;
		Controller_obj();

	public:
		enum { _hx_ClassId = 0x2ccfcf73 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="util.control.Controller")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"util.control.Controller"); }
		static hx::ObjectPtr< Controller_obj > __new();
		static hx::ObjectPtr< Controller_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Controller_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Controller","\xbc","\x9c","\x6f","\xfb"); }

		::Array< ::Dynamic> buffer;
		void initializeBuffer();
		::Dynamic initializeBuffer_dyn();

		::Array< ::Dynamic> getBuffer();
		::Dynamic getBuffer_dyn();

		 ::Xml bufferAction(::String value1,::String value2,::String value3);
		::Dynamic bufferAction_dyn();

		virtual void populateBuffer();
		::Dynamic populateBuffer_dyn();

};

} // end namespace util
} // end namespace control

#endif /* INCLUDED_util_control_Controller */ 
