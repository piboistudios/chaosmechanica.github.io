// Generated by Haxe 3.4.4
#ifndef INCLUDED_General
#define INCLUDED_General

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(General)



class HXCPP_CLASS_ATTRIBUTES General_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef General_obj OBJ_;
		General_obj();

	public:
		enum { _hx_ClassId = 0x3315bb40 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="General")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"General"); }

		hx::ObjectPtr< General_obj > __new() {
			hx::ObjectPtr< General_obj > __this = new General_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< General_obj > __alloc(hx::Ctx *_hx_ctx) {
			General_obj *__this = (General_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(General_obj), false, "General"));
			*(void **)__this = General_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~General_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("General","\x08","\x93","\xac","\x83"); }

		static int findInList_dat_Part( ::Dynamic item,::Array< ::Dynamic> list);
		static ::Dynamic findInList_dat_Part_dyn();

};


#endif /* INCLUDED_General */ 
