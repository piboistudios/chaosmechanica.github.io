// Generated by Haxe 3.4.4
#ifndef INCLUDED_flixel_addons_display_FlxZoomCamera
#define INCLUDED_flixel_addons_display_FlxZoomCamera

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxCamera)
HX_DECLARE_CLASS3(flixel,addons,display,FlxZoomCamera)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace flixel{
namespace addons{
namespace display{


class HXCPP_CLASS_ATTRIBUTES FlxZoomCamera_obj : public  ::flixel::FlxCamera_obj
{
	public:
		typedef  ::flixel::FlxCamera_obj super;
		typedef FlxZoomCamera_obj OBJ_;
		FlxZoomCamera_obj();

	public:
		enum { _hx_ClassId = 0x472260df };

		void __construct(int X,int Y,int Width,int Height,hx::Null< Float >  __o_Zoom);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flixel.addons.display.FlxZoomCamera")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"flixel.addons.display.FlxZoomCamera"); }
		static hx::ObjectPtr< FlxZoomCamera_obj > __new(int X,int Y,int Width,int Height,hx::Null< Float >  __o_Zoom);
		static hx::ObjectPtr< FlxZoomCamera_obj > __alloc(hx::Ctx *_hx_ctx,int X,int Y,int Width,int Height,hx::Null< Float >  __o_Zoom);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FlxZoomCamera_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("FlxZoomCamera","\x0a","\x49","\x25","\xb6"); }

		Float targetZoom;
		Float zoomSpeed;
		Float zoomMargin;
		void update(Float elapsed);

		void alignCamera();
		::Dynamic alignCamera_dyn();

};

} // end namespace flixel
} // end namespace addons
} // end namespace display

#endif /* INCLUDED_flixel_addons_display_FlxZoomCamera */ 
