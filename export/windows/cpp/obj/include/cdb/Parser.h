// Generated by Haxe 3.4.4
#ifndef INCLUDED_cdb_Parser
#define INCLUDED_cdb_Parser

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(cdb,ColumnType)
HX_DECLARE_CLASS1(cdb,Parser)

namespace cdb{


class HXCPP_CLASS_ATTRIBUTES Parser_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Parser_obj OBJ_;
		Parser_obj();

	public:
		enum { _hx_ClassId = 0x36ec5360 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="cdb.Parser")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"cdb.Parser"); }

		hx::ObjectPtr< Parser_obj > __new() {
			hx::ObjectPtr< Parser_obj > __this = new Parser_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Parser_obj > __alloc(hx::Ctx *_hx_ctx) {
			Parser_obj *__this = (Parser_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Parser_obj), false, "cdb.Parser"));
			*(void **)__this = Parser_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Parser_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Parser","\xff","\x10","\x1d","\x22"); }

		static ::String saveType( ::cdb::ColumnType t);
		static ::Dynamic saveType_dyn();

		static  ::cdb::ColumnType getType(::String str);
		static ::Dynamic getType_dyn();

		static  ::Dynamic parse(::String content);
		static ::Dynamic parse_dyn();

		static ::String save( ::Dynamic data);
		static ::Dynamic save_dyn();

};

} // end namespace cdb

#endif /* INCLUDED_cdb_Parser */ 
