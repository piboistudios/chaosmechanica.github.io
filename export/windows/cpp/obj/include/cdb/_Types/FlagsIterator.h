// Generated by Haxe 3.4.4
#ifndef INCLUDED_cdb__Types_FlagsIterator
#define INCLUDED_cdb__Types_FlagsIterator

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_5ad6762bacca3409_21_new)
HX_DECLARE_CLASS2(cdb,_Types,FlagsIterator)

namespace cdb{
namespace _Types{


class HXCPP_CLASS_ATTRIBUTES FlagsIterator_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef FlagsIterator_obj OBJ_;
		FlagsIterator_obj();

	public:
		enum { _hx_ClassId = 0x38edbdda };

		void __construct(int flags);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="cdb._Types.FlagsIterator")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"cdb._Types.FlagsIterator"); }

		hx::ObjectPtr< FlagsIterator_obj > __new(int flags) {
			hx::ObjectPtr< FlagsIterator_obj > __this = new FlagsIterator_obj();
			__this->__construct(flags);
			return __this;
		}

		static hx::ObjectPtr< FlagsIterator_obj > __alloc(hx::Ctx *_hx_ctx,int flags) {
			FlagsIterator_obj *__this = (FlagsIterator_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlagsIterator_obj), false, "cdb._Types.FlagsIterator"));
			*(void **)__this = FlagsIterator_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_5ad6762bacca3409_21_new)
HXLINE(  22)		( ( ::cdb::_Types::FlagsIterator)(__this) )->flags = flags;
HXLINE(  23)		( ( ::cdb::_Types::FlagsIterator)(__this) )->k = (int)0;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FlagsIterator_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("FlagsIterator","\x35","\xa0","\x5f","\x31"); }

		int flags;
		int k;
		bool hasNext();
		::Dynamic hasNext_dyn();

		 ::Dynamic next();
		::Dynamic next_dyn();

};

} // end namespace cdb
} // end namespace _Types

#endif /* INCLUDED_cdb__Types_FlagsIterator */ 
