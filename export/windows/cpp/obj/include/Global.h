// Generated by Haxe 3.4.4
#ifndef INCLUDED_Global
#define INCLUDED_Global

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Global)
HX_DECLARE_CLASS0(Player)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,IFlxBasic)
HX_DECLARE_CLASS1(flixel,IFlxSprite)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxUIText)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IFlxUIWidget)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IHasParams)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IResizable)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS4(flixel,_hx_system,debug,log,LogStyle)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,tile,FlxBaseTilemap)
HX_DECLARE_CLASS2(flixel,tile,FlxTilemap)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS2(util,mechanica,MechGroup)



class HXCPP_CLASS_ATTRIBUTES Global_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Global_obj OBJ_;
		Global_obj();

	public:
		enum { _hx_ClassId = 0x1aa908e7 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Global")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Global"); }

		hx::ObjectPtr< Global_obj > __new() {
			hx::ObjectPtr< Global_obj > __this = new Global_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Global_obj > __alloc(hx::Ctx *_hx_ctx) {
			Global_obj *__this = (Global_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Global_obj), false, "Global"));
			*(void **)__this = Global_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Global_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Global","\x83","\xa5","\x46","\xdc"); }

		static void __boot();
		static int findInList_dat_Part( ::Dynamic item,::Array< ::Dynamic> list);
		static ::Dynamic findInList_dat_Part_dyn();

		static  ::flixel::addons::ui::FlxUIText text;
		static  ::Player player;
		static  ::flixel::_hx_system::debug::log::LogStyle logStyle;
		static Float speedScale;
		static  ::flixel::group::FlxTypedSpriteGroup colliders;
		static  ::flixel::tile::FlxTilemap map;
		static  ::util::mechanica::MechGroup mechGroupA;
		static  ::util::mechanica::MechGroup mechGroupB;
		static void add( ::flixel::FlxSprite v);
		static ::Dynamic add_dyn();

		static void log(::String _text);
		static ::Dynamic log_dyn();

		static void setup();
		static ::Dynamic setup_dyn();

		static void setupDebugLogText( ::Dynamic initMessage);
		static ::Dynamic setupDebugLogText_dyn();

		static bool partExists(::String part);
		static ::Dynamic partExists_dyn();

};


#endif /* INCLUDED_Global */ 
